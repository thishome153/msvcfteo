// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "KVZU_v06-pskel.hxx"

namespace KVZU
{
  // tParcel_pskel
  //

  void tParcel_pskel::
  CadastralBlock_parser (::KVZU::Simple1::s40_pskel& p)
  {
    this->CadastralBlock_parser_ = &p;
  }

  void tParcel_pskel::
  Name_parser (::KVZU::dParc1::dParcels_pskel& p)
  {
    this->Name_parser_ = &p;
  }

  void tParcel_pskel::
  OldNumbers_parser (::KVZU::Num1::tOldNumbers_pskel& p)
  {
    this->OldNumbers_parser_ = &p;
  }

  void tParcel_pskel::
  PrevCadastralNumbers_parser (::KVZU::tCadastralNumbersOut_pskel& p)
  {
    this->PrevCadastralNumbers_parser_ = &p;
  }

  void tParcel_pskel::
  InnerCadastralNumbers_parser (::KVZU::tCadastralNumbersOut_pskel& p)
  {
    this->InnerCadastralNumbers_parser_ = &p;
  }

  void tParcel_pskel::
  Area_parser (::KVZU::tAreaOut_pskel& p)
  {
    this->Area_parser_ = &p;
  }

  void tParcel_pskel::
  Location_parser (::KVZU::tLocation_pskel& p)
  {
    this->Location_parser_ = &p;
  }

  void tParcel_pskel::
  Category_parser (::KVZU::dCateg1::dCategories_pskel& p)
  {
    this->Category_parser_ = &p;
  }

  void tParcel_pskel::
  Utilization_parser (::KVZU::tUtilization_pskel& p)
  {
    this->Utilization_parser_ = &p;
  }

  void tParcel_pskel::
  NaturalObjects_parser (::KVZU::NatObj1::tNaturalObjects_pskel& p)
  {
    this->NaturalObjects_parser_ = &p;
  }

  void tParcel_pskel::
  Rights_parser (::KVZU::Rights_pskel& p)
  {
    this->Rights_parser_ = &p;
  }

  void tParcel_pskel::
  SubParcels_parser (::KVZU::SubParcels_pskel& p)
  {
    this->SubParcels_parser_ = &p;
  }

  void tParcel_pskel::
  EntitySpatial_parser (::KVZU::Spa2::tEntitySpatialBordersZUOut_pskel& p)
  {
    this->EntitySpatial_parser_ = &p;
  }

  void tParcel_pskel::
  Contours_parser (::KVZU::Contours_pskel& p)
  {
    this->Contours_parser_ = &p;
  }

  void tParcel_pskel::
  CompositionEZ_parser (::KVZU::CompositionEZ_pskel& p)
  {
    this->CompositionEZ_parser_ = &p;
  }

  void tParcel_pskel::
  Encumbrances_parser (::KVZU::Encumbrances_pskel& p)
  {
    this->Encumbrances_parser_ = &p;
  }

  void tParcel_pskel::
  CadastralCost_parser (::KVZU::Cos1::tCadastralCost_pskel& p)
  {
    this->CadastralCost_parser_ = &p;
  }

  void tParcel_pskel::
  SpecialNote_parser (::xml_schema::string_pskel& p)
  {
    this->SpecialNote_parser_ = &p;
  }

  void tParcel_pskel::
  ParcelNeighbours_parser (::KVZU::ParcelNeighbours_pskel& p)
  {
    this->ParcelNeighbours_parser_ = &p;
  }

  void tParcel_pskel::
  AllOffspringParcel_parser (::KVZU::tCadastralNumbersOut_pskel& p)
  {
    this->AllOffspringParcel_parser_ = &p;
  }

  void tParcel_pskel::
  CadastralNumber_parser (::KVZU::Simple1::s40_pskel& p)
  {
    this->CadastralNumber_parser_ = &p;
  }

  void tParcel_pskel::
  State_parser (::KVZU::dStat1::dStates_pskel& p)
  {
    this->State_parser_ = &p;
  }

  void tParcel_pskel::
  DateExpiry_parser (::xml_schema::date_pskel& p)
  {
    this->DateExpiry_parser_ = &p;
  }

  void tParcel_pskel::
  DateCreated_parser (::xml_schema::date_pskel& p)
  {
    this->DateCreated_parser_ = &p;
  }

  void tParcel_pskel::
  DateRemoved_parser (::xml_schema::date_pskel& p)
  {
    this->DateRemoved_parser_ = &p;
  }

  void tParcel_pskel::
  DateCreatedDoc_parser (::xml_schema::date_pskel& p)
  {
    this->DateCreatedDoc_parser_ = &p;
  }

  void tParcel_pskel::
  parsers (::KVZU::Simple1::s40_pskel& CadastralBlock,
           ::KVZU::dParc1::dParcels_pskel& Name,
           ::KVZU::Num1::tOldNumbers_pskel& OldNumbers,
           ::KVZU::tCadastralNumbersOut_pskel& PrevCadastralNumbers,
           ::KVZU::tCadastralNumbersOut_pskel& InnerCadastralNumbers,
           ::KVZU::tAreaOut_pskel& Area,
           ::KVZU::tLocation_pskel& Location,
           ::KVZU::dCateg1::dCategories_pskel& Category,
           ::KVZU::tUtilization_pskel& Utilization,
           ::KVZU::NatObj1::tNaturalObjects_pskel& NaturalObjects,
           ::KVZU::Rights_pskel& Rights,
           ::KVZU::SubParcels_pskel& SubParcels,
           ::KVZU::Spa2::tEntitySpatialBordersZUOut_pskel& EntitySpatial,
           ::KVZU::Contours_pskel& Contours,
           ::KVZU::CompositionEZ_pskel& CompositionEZ,
           ::KVZU::Encumbrances_pskel& Encumbrances,
           ::KVZU::Cos1::tCadastralCost_pskel& CadastralCost,
           ::xml_schema::string_pskel& SpecialNote,
           ::KVZU::ParcelNeighbours_pskel& ParcelNeighbours,
           ::KVZU::tCadastralNumbersOut_pskel& AllOffspringParcel,
           ::KVZU::Simple1::s40_pskel& CadastralNumber,
           ::KVZU::dStat1::dStates_pskel& State,
           ::xml_schema::date_pskel& DateExpiry,
           ::xml_schema::date_pskel& DateCreated,
           ::xml_schema::date_pskel& DateRemoved,
           ::xml_schema::date_pskel& DateCreatedDoc)
  {
    this->CadastralBlock_parser_ = &CadastralBlock;
    this->Name_parser_ = &Name;
    this->OldNumbers_parser_ = &OldNumbers;
    this->PrevCadastralNumbers_parser_ = &PrevCadastralNumbers;
    this->InnerCadastralNumbers_parser_ = &InnerCadastralNumbers;
    this->Area_parser_ = &Area;
    this->Location_parser_ = &Location;
    this->Category_parser_ = &Category;
    this->Utilization_parser_ = &Utilization;
    this->NaturalObjects_parser_ = &NaturalObjects;
    this->Rights_parser_ = &Rights;
    this->SubParcels_parser_ = &SubParcels;
    this->EntitySpatial_parser_ = &EntitySpatial;
    this->Contours_parser_ = &Contours;
    this->CompositionEZ_parser_ = &CompositionEZ;
    this->Encumbrances_parser_ = &Encumbrances;
    this->CadastralCost_parser_ = &CadastralCost;
    this->SpecialNote_parser_ = &SpecialNote;
    this->ParcelNeighbours_parser_ = &ParcelNeighbours;
    this->AllOffspringParcel_parser_ = &AllOffspringParcel;
    this->CadastralNumber_parser_ = &CadastralNumber;
    this->State_parser_ = &State;
    this->DateExpiry_parser_ = &DateExpiry;
    this->DateCreated_parser_ = &DateCreated;
    this->DateRemoved_parser_ = &DateRemoved;
    this->DateCreatedDoc_parser_ = &DateCreatedDoc;
  }

  tParcel_pskel::
  tParcel_pskel ()
  : CadastralBlock_parser_ (0),
    Name_parser_ (0),
    OldNumbers_parser_ (0),
    PrevCadastralNumbers_parser_ (0),
    InnerCadastralNumbers_parser_ (0),
    Area_parser_ (0),
    Location_parser_ (0),
    Category_parser_ (0),
    Utilization_parser_ (0),
    NaturalObjects_parser_ (0),
    Rights_parser_ (0),
    SubParcels_parser_ (0),
    EntitySpatial_parser_ (0),
    Contours_parser_ (0),
    CompositionEZ_parser_ (0),
    Encumbrances_parser_ (0),
    CadastralCost_parser_ (0),
    SpecialNote_parser_ (0),
    ParcelNeighbours_parser_ (0),
    AllOffspringParcel_parser_ (0),
    CadastralNumber_parser_ (0),
    State_parser_ (0),
    DateExpiry_parser_ (0),
    DateCreated_parser_ (0),
    DateRemoved_parser_ (0),
    DateCreatedDoc_parser_ (0)
  {
  }

  // tSubParcel_pskel
  //

  void tSubParcel_pskel::
  Area_parser (::KVZU::tAreaWithoutInaccuracyOut_pskel& p)
  {
    this->Area_parser_ = &p;
  }

  void tSubParcel_pskel::
  Encumbrance_parser (::KVZU::tEncumbranceZU_pskel& p)
  {
    this->Encumbrance_parser_ = &p;
  }

  void tSubParcel_pskel::
  EntitySpatial_parser (::KVZU::Spa2::tEntitySpatialBordersZUOut_pskel& p)
  {
    this->EntitySpatial_parser_ = &p;
  }

  void tSubParcel_pskel::
  NumberRecord_parser (::KVZU::Simple1::s40_pskel& p)
  {
    this->NumberRecord_parser_ = &p;
  }

  void tSubParcel_pskel::
  Full_parser (::xml_schema::boolean_pskel& p)
  {
    this->Full_parser_ = &p;
  }

  void tSubParcel_pskel::
  State_parser (::KVZU::dStat1::dStates_pskel& p)
  {
    this->State_parser_ = &p;
  }

  void tSubParcel_pskel::
  DateExpiry_parser (::xml_schema::date_pskel& p)
  {
    this->DateExpiry_parser_ = &p;
  }

  void tSubParcel_pskel::
  parsers (::KVZU::tAreaWithoutInaccuracyOut_pskel& Area,
           ::KVZU::tEncumbranceZU_pskel& Encumbrance,
           ::KVZU::Spa2::tEntitySpatialBordersZUOut_pskel& EntitySpatial,
           ::KVZU::Simple1::s40_pskel& NumberRecord,
           ::xml_schema::boolean_pskel& Full,
           ::KVZU::dStat1::dStates_pskel& State,
           ::xml_schema::date_pskel& DateExpiry)
  {
    this->Area_parser_ = &Area;
    this->Encumbrance_parser_ = &Encumbrance;
    this->EntitySpatial_parser_ = &EntitySpatial;
    this->NumberRecord_parser_ = &NumberRecord;
    this->Full_parser_ = &Full;
    this->State_parser_ = &State;
    this->DateExpiry_parser_ = &DateExpiry;
  }

  tSubParcel_pskel::
  tSubParcel_pskel ()
  : Area_parser_ (0),
    Encumbrance_parser_ (0),
    EntitySpatial_parser_ (0),
    NumberRecord_parser_ (0),
    Full_parser_ (0),
    State_parser_ (0),
    DateExpiry_parser_ (0)
  {
  }

  // tContour_pskel
  //

  void tContour_pskel::
  Area_parser (::KVZU::tAreaWithoutInaccuracyOut_pskel& p)
  {
    this->Area_parser_ = &p;
  }

  void tContour_pskel::
  EntitySpatial_parser (::KVZU::Spa2::tEntitySpatialBordersZUOut_pskel& p)
  {
    this->EntitySpatial_parser_ = &p;
  }

  void tContour_pskel::
  NumberRecord_parser (::KVZU::Simple1::p10_pskel& p)
  {
    this->NumberRecord_parser_ = &p;
  }

  void tContour_pskel::
  parsers (::KVZU::tAreaWithoutInaccuracyOut_pskel& Area,
           ::KVZU::Spa2::tEntitySpatialBordersZUOut_pskel& EntitySpatial,
           ::KVZU::Simple1::p10_pskel& NumberRecord)
  {
    this->Area_parser_ = &Area;
    this->EntitySpatial_parser_ = &EntitySpatial;
    this->NumberRecord_parser_ = &NumberRecord;
  }

  tContour_pskel::
  tContour_pskel ()
  : Area_parser_ (0),
    EntitySpatial_parser_ (0),
    NumberRecord_parser_ (0)
  {
  }

  // tEntryParcel_pskel
  //

  void tEntryParcel_pskel::
  Area_parser (::KVZU::tAreaWithoutInaccuracyOut_pskel& p)
  {
    this->Area_parser_ = &p;
  }

  void tEntryParcel_pskel::
  EntitySpatial_parser (::KVZU::Spa2::tEntitySpatialBordersZUOut_pskel& p)
  {
    this->EntitySpatial_parser_ = &p;
  }

  void tEntryParcel_pskel::
  CadastralNumber_parser (::KVZU::Simple1::s40_pskel& p)
  {
    this->CadastralNumber_parser_ = &p;
  }

  void tEntryParcel_pskel::
  State_parser (::KVZU::dStat1::dStates_pskel& p)
  {
    this->State_parser_ = &p;
  }

  void tEntryParcel_pskel::
  DateRemoved_parser (::xml_schema::date_pskel& p)
  {
    this->DateRemoved_parser_ = &p;
  }

  void tEntryParcel_pskel::
  parsers (::KVZU::tAreaWithoutInaccuracyOut_pskel& Area,
           ::KVZU::Spa2::tEntitySpatialBordersZUOut_pskel& EntitySpatial,
           ::KVZU::Simple1::s40_pskel& CadastralNumber,
           ::KVZU::dStat1::dStates_pskel& State,
           ::xml_schema::date_pskel& DateRemoved)
  {
    this->Area_parser_ = &Area;
    this->EntitySpatial_parser_ = &EntitySpatial;
    this->CadastralNumber_parser_ = &CadastralNumber;
    this->State_parser_ = &State;
    this->DateRemoved_parser_ = &DateRemoved;
  }

  tEntryParcel_pskel::
  tEntryParcel_pskel ()
  : Area_parser_ (0),
    EntitySpatial_parser_ (0),
    CadastralNumber_parser_ (0),
    State_parser_ (0),
    DateRemoved_parser_ (0)
  {
  }

  // tAreaOut_pskel
  //

  void tAreaOut_pskel::
  Area_parser (::KVZU::Simple2::nn20_pskel& p)
  {
    this->Area_parser_ = &p;
  }

  void tAreaOut_pskel::
  Unit_parser (::KVZU::dUn1::dUnit_pskel& p)
  {
    this->Unit_parser_ = &p;
  }

  void tAreaOut_pskel::
  Inaccuracy_parser (::KVZU::Simple1::d20_2_pskel& p)
  {
    this->Inaccuracy_parser_ = &p;
  }

  void tAreaOut_pskel::
  parsers (::KVZU::Simple2::nn20_pskel& Area,
           ::KVZU::dUn1::dUnit_pskel& Unit,
           ::KVZU::Simple1::d20_2_pskel& Inaccuracy)
  {
    this->Area_parser_ = &Area;
    this->Unit_parser_ = &Unit;
    this->Inaccuracy_parser_ = &Inaccuracy;
  }

  tAreaOut_pskel::
  tAreaOut_pskel ()
  : Area_parser_ (0),
    Unit_parser_ (0),
    Inaccuracy_parser_ (0)
  {
  }

  // tAreaWithoutInaccuracyOut_pskel
  //

  void tAreaWithoutInaccuracyOut_pskel::
  Area_parser (::KVZU::Simple1::d20_2_pskel& p)
  {
    this->Area_parser_ = &p;
  }

  void tAreaWithoutInaccuracyOut_pskel::
  Unit_parser (::KVZU::dUn1::dUnit_pskel& p)
  {
    this->Unit_parser_ = &p;
  }

  void tAreaWithoutInaccuracyOut_pskel::
  parsers (::KVZU::Simple1::d20_2_pskel& Area,
           ::KVZU::dUn1::dUnit_pskel& Unit)
  {
    this->Area_parser_ = &Area;
    this->Unit_parser_ = &Unit;
  }

  tAreaWithoutInaccuracyOut_pskel::
  tAreaWithoutInaccuracyOut_pskel ()
  : Area_parser_ (0),
    Unit_parser_ (0)
  {
  }

  // tUtilization_pskel
  //

  void tUtilization_pskel::
  Utilization_parser (::KVZU::dUtz1::dUtilizations_pskel& p)
  {
    this->Utilization_parser_ = &p;
  }

  void tUtilization_pskel::
  ByDoc_parser (::KVZU::Simple1::s4000_pskel& p)
  {
    this->ByDoc_parser_ = &p;
  }

  void tUtilization_pskel::
  parsers (::KVZU::dUtz1::dUtilizations_pskel& Utilization,
           ::KVZU::Simple1::s4000_pskel& ByDoc)
  {
    this->Utilization_parser_ = &Utilization;
    this->ByDoc_parser_ = &ByDoc;
  }

  tUtilization_pskel::
  tUtilization_pskel ()
  : Utilization_parser_ (0),
    ByDoc_parser_ (0)
  {
  }

  // tCadastralNumbersOut_pskel
  //

  void tCadastralNumbersOut_pskel::
  CadastralNumber_parser (::KVZU::Simple1::s40_pskel& p)
  {
    this->CadastralNumber_parser_ = &p;
  }

  void tCadastralNumbersOut_pskel::
  parsers (::KVZU::Simple1::s40_pskel& CadastralNumber)
  {
    this->CadastralNumber_parser_ = &CadastralNumber;
  }

  tCadastralNumbersOut_pskel::
  tCadastralNumbersOut_pskel ()
  : CadastralNumber_parser_ (0)
  {
  }

  // tLocation_pskel
  //

  void tLocation_pskel::
  inBounds_parser (::KVZU::Simple2::sInBounds_pskel& p)
  {
    this->inBounds_parser_ = &p;
  }

  void tLocation_pskel::
  Placed_parser (::KVZU::Simple1::s6_pskel& p)
  {
    this->Placed_parser_ = &p;
  }

  void tLocation_pskel::
  Elaboration_parser (::KVZU::tElaborationLocation_pskel& p)
  {
    this->Elaboration_parser_ = &p;
  }

  void tLocation_pskel::
  Address_parser (::KVZU::adrOut3::tAddressOut_pskel& p)
  {
    this->Address_parser_ = &p;
  }

  void tLocation_pskel::
  parsers (::KVZU::Simple2::sInBounds_pskel& inBounds,
           ::KVZU::Simple1::s6_pskel& Placed,
           ::KVZU::tElaborationLocation_pskel& Elaboration,
           ::KVZU::adrOut3::tAddressOut_pskel& Address)
  {
    this->inBounds_parser_ = &inBounds;
    this->Placed_parser_ = &Placed;
    this->Elaboration_parser_ = &Elaboration;
    this->Address_parser_ = &Address;
  }

  tLocation_pskel::
  tLocation_pskel ()
  : inBounds_parser_ (0),
    Placed_parser_ (0),
    Elaboration_parser_ (0),
    Address_parser_ (0)
  {
  }

  // tElaborationLocation_pskel
  //

  void tElaborationLocation_pskel::
  ReferenceMark_parser (::KVZU::Simple1::s255_pskel& p)
  {
    this->ReferenceMark_parser_ = &p;
  }

  void tElaborationLocation_pskel::
  Distance_parser (::KVZU::Simple1::s255_pskel& p)
  {
    this->Distance_parser_ = &p;
  }

  void tElaborationLocation_pskel::
  Direction_parser (::KVZU::Simple1::s255_pskel& p)
  {
    this->Direction_parser_ = &p;
  }

  void tElaborationLocation_pskel::
  parsers (::KVZU::Simple1::s255_pskel& ReferenceMark,
           ::KVZU::Simple1::s255_pskel& Distance,
           ::KVZU::Simple1::s255_pskel& Direction)
  {
    this->ReferenceMark_parser_ = &ReferenceMark;
    this->Distance_parser_ = &Distance;
    this->Direction_parser_ = &Direction;
  }

  tElaborationLocation_pskel::
  tElaborationLocation_pskel ()
  : ReferenceMark_parser_ (0),
    Distance_parser_ (0),
    Direction_parser_ (0)
  {
  }

  // tRight_pskel
  //

  void tRight_pskel::
  Name_parser (::KVZU::Simple1::s255_pskel& p)
  {
    this->Name_parser_ = &p;
  }

  void tRight_pskel::
  Type_parser (::KVZU::dRi1::dRights_pskel& p)
  {
    this->Type_parser_ = &p;
  }

  void tRight_pskel::
  Owners_parser (::KVZU::tOwners_pskel& p)
  {
    this->Owners_parser_ = &p;
  }

  void tRight_pskel::
  Share_parser (::KVZU::tShare_pskel& p)
  {
    this->Share_parser_ = &p;
  }

  void tRight_pskel::
  ShareText_parser (::KVZU::Simple1::s255_pskel& p)
  {
    this->ShareText_parser_ = &p;
  }

  void tRight_pskel::
  Desc_parser (::KVZU::Simple1::s255_pskel& p)
  {
    this->Desc_parser_ = &p;
  }

  void tRight_pskel::
  Registration_parser (::KVZU::tRegistration_pskel& p)
  {
    this->Registration_parser_ = &p;
  }

  void tRight_pskel::
  Documents_parser (::KVZU::Documents_pskel& p)
  {
    this->Documents_parser_ = &p;
  }

  void tRight_pskel::
  parsers (::KVZU::Simple1::s255_pskel& Name,
           ::KVZU::dRi1::dRights_pskel& Type,
           ::KVZU::tOwners_pskel& Owners,
           ::KVZU::tShare_pskel& Share,
           ::KVZU::Simple1::s255_pskel& ShareText,
           ::KVZU::Simple1::s255_pskel& Desc,
           ::KVZU::tRegistration_pskel& Registration,
           ::KVZU::Documents_pskel& Documents)
  {
    this->Name_parser_ = &Name;
    this->Type_parser_ = &Type;
    this->Owners_parser_ = &Owners;
    this->Share_parser_ = &Share;
    this->ShareText_parser_ = &ShareText;
    this->Desc_parser_ = &Desc;
    this->Registration_parser_ = &Registration;
    this->Documents_parser_ = &Documents;
  }

  tRight_pskel::
  tRight_pskel ()
  : Name_parser_ (0),
    Type_parser_ (0),
    Owners_parser_ (0),
    Share_parser_ (0),
    ShareText_parser_ (0),
    Desc_parser_ (0),
    Registration_parser_ (0),
    Documents_parser_ (0)
  {
  }

  // tEncumbranceZU_pskel
  //

  void tEncumbranceZU_pskel::
  Name_parser (::KVZU::Simple1::s4000_pskel& p)
  {
    this->Name_parser_ = &p;
  }

  void tEncumbranceZU_pskel::
  Type_parser (::KVZU::dEn2::dEncumbrances_pskel& p)
  {
    this->Type_parser_ = &p;
  }

  void tEncumbranceZU_pskel::
  AccountNumber_parser (::KVZU::Simple1::s255_pskel& p)
  {
    this->AccountNumber_parser_ = &p;
  }

  void tEncumbranceZU_pskel::
  CadastralNumberRestriction_parser (::KVZU::Simple1::s40_pskel& p)
  {
    this->CadastralNumberRestriction_parser_ = &p;
  }

  void tEncumbranceZU_pskel::
  OwnersRestrictionInFavorem_parser (::KVZU::tOwnerRestrictionInFavorem_pskel& p)
  {
    this->OwnersRestrictionInFavorem_parser_ = &p;
  }

  void tEncumbranceZU_pskel::
  Duration_parser (::KVZU::tDuration_pskel& p)
  {
    this->Duration_parser_ = &p;
  }

  void tEncumbranceZU_pskel::
  Registration_parser (::KVZU::tRegistration_pskel& p)
  {
    this->Registration_parser_ = &p;
  }

  void tEncumbranceZU_pskel::
  Document_parser (::KVZU::DocOut3::tDocumentWithoutAppliedFile_pskel& p)
  {
    this->Document_parser_ = &p;
  }

  void tEncumbranceZU_pskel::
  parsers (::KVZU::Simple1::s4000_pskel& Name,
           ::KVZU::dEn2::dEncumbrances_pskel& Type,
           ::KVZU::Simple1::s255_pskel& AccountNumber,
           ::KVZU::Simple1::s40_pskel& CadastralNumberRestriction,
           ::KVZU::tOwnerRestrictionInFavorem_pskel& OwnersRestrictionInFavorem,
           ::KVZU::tDuration_pskel& Duration,
           ::KVZU::tRegistration_pskel& Registration,
           ::KVZU::DocOut3::tDocumentWithoutAppliedFile_pskel& Document)
  {
    this->Name_parser_ = &Name;
    this->Type_parser_ = &Type;
    this->AccountNumber_parser_ = &AccountNumber;
    this->CadastralNumberRestriction_parser_ = &CadastralNumberRestriction;
    this->OwnersRestrictionInFavorem_parser_ = &OwnersRestrictionInFavorem;
    this->Duration_parser_ = &Duration;
    this->Registration_parser_ = &Registration;
    this->Document_parser_ = &Document;
  }

  tEncumbranceZU_pskel::
  tEncumbranceZU_pskel ()
  : Name_parser_ (0),
    Type_parser_ (0),
    AccountNumber_parser_ (0),
    CadastralNumberRestriction_parser_ (0),
    OwnersRestrictionInFavorem_parser_ (0),
    Duration_parser_ (0),
    Registration_parser_ (0),
    Document_parser_ (0)
  {
  }

  // tShare_pskel
  //

  void tShare_pskel::
  Numerator_parser (::xml_schema::integer_pskel& p)
  {
    this->Numerator_parser_ = &p;
  }

  void tShare_pskel::
  Denominator_parser (::xml_schema::integer_pskel& p)
  {
    this->Denominator_parser_ = &p;
  }

  void tShare_pskel::
  parsers (::xml_schema::integer_pskel& Numerator,
           ::xml_schema::integer_pskel& Denominator)
  {
    this->Numerator_parser_ = &Numerator;
    this->Denominator_parser_ = &Denominator;
  }

  tShare_pskel::
  tShare_pskel ()
  : Numerator_parser_ (0),
    Denominator_parser_ (0)
  {
  }

  // tRegistration_pskel
  //

  void tRegistration_pskel::
  RegNumber_parser (::KVZU::Simple1::s45_pskel& p)
  {
    this->RegNumber_parser_ = &p;
  }

  void tRegistration_pskel::
  RegDate_parser (::xml_schema::date_pskel& p)
  {
    this->RegDate_parser_ = &p;
  }

  void tRegistration_pskel::
  parsers (::KVZU::Simple1::s45_pskel& RegNumber,
           ::xml_schema::date_pskel& RegDate)
  {
    this->RegNumber_parser_ = &RegNumber;
    this->RegDate_parser_ = &RegDate;
  }

  tRegistration_pskel::
  tRegistration_pskel ()
  : RegNumber_parser_ (0),
    RegDate_parser_ (0)
  {
  }

  // tDuration_pskel
  //

  void tDuration_pskel::
  Started_parser (::xml_schema::date_pskel& p)
  {
    this->Started_parser_ = &p;
  }

  void tDuration_pskel::
  Stopped_parser (::xml_schema::date_pskel& p)
  {
    this->Stopped_parser_ = &p;
  }

  void tDuration_pskel::
  Term_parser (::KVZU::Simple1::s100_pskel& p)
  {
    this->Term_parser_ = &p;
  }

  void tDuration_pskel::
  parsers (::xml_schema::date_pskel& Started,
           ::xml_schema::date_pskel& Stopped,
           ::KVZU::Simple1::s100_pskel& Term)
  {
    this->Started_parser_ = &Started;
    this->Stopped_parser_ = &Stopped;
    this->Term_parser_ = &Term;
  }

  tDuration_pskel::
  tDuration_pskel ()
  : Started_parser_ (0),
    Stopped_parser_ (0),
    Term_parser_ (0)
  {
  }

  // tOwners_pskel
  //

  void tOwners_pskel::
  Owner_parser (::KVZU::Owner_pskel& p)
  {
    this->Owner_parser_ = &p;
  }

  void tOwners_pskel::
  parsers (::KVZU::Owner_pskel& Owner)
  {
    this->Owner_parser_ = &Owner;
  }

  tOwners_pskel::
  tOwners_pskel ()
  : Owner_parser_ (0)
  {
  }

  // tOwner_pskel
  //

  void tOwner_pskel::
  Person_parser (::KVZU::Person_pskel& p)
  {
    this->Person_parser_ = &p;
  }

  void tOwner_pskel::
  Organization_parser (::KVZU::tNameOwner_pskel& p)
  {
    this->Organization_parser_ = &p;
  }

  void tOwner_pskel::
  Governance_parser (::KVZU::tNameOwner_pskel& p)
  {
    this->Governance_parser_ = &p;
  }

  void tOwner_pskel::
  parsers (::KVZU::Person_pskel& Person,
           ::KVZU::tNameOwner_pskel& Organization,
           ::KVZU::tNameOwner_pskel& Governance)
  {
    this->Person_parser_ = &Person;
    this->Organization_parser_ = &Organization;
    this->Governance_parser_ = &Governance;
  }

  tOwner_pskel::
  tOwner_pskel ()
  : Person_parser_ (0),
    Organization_parser_ (0),
    Governance_parser_ (0)
  {
  }

  // tContactOwner_pskel
  //

  void tContactOwner_pskel::
  Address_parser (::KVZU::Simple1::s4000_pskel& p)
  {
    this->Address_parser_ = &p;
  }

  void tContactOwner_pskel::
  Email_parser (::KVZU::Simple1::s100_pskel& p)
  {
    this->Email_parser_ = &p;
  }

  void tContactOwner_pskel::
  parsers (::KVZU::Simple1::s4000_pskel& Address,
           ::KVZU::Simple1::s100_pskel& Email)
  {
    this->Address_parser_ = &Address;
    this->Email_parser_ = &Email;
  }

  tContactOwner_pskel::
  tContactOwner_pskel ()
  : Address_parser_ (0),
    Email_parser_ (0)
  {
  }

  // tOwnerRestrictionInFavorem_pskel
  //

  void tOwnerRestrictionInFavorem_pskel::
  OwnerRestrictionInFavorem_parser (::KVZU::tOwner_pskel& p)
  {
    this->OwnerRestrictionInFavorem_parser_ = &p;
  }

  void tOwnerRestrictionInFavorem_pskel::
  parsers (::KVZU::tOwner_pskel& OwnerRestrictionInFavorem)
  {
    this->OwnerRestrictionInFavorem_parser_ = &OwnerRestrictionInFavorem;
  }

  tOwnerRestrictionInFavorem_pskel::
  tOwnerRestrictionInFavorem_pskel ()
  : OwnerRestrictionInFavorem_parser_ (0)
  {
  }

  // tNameOwner_pskel
  //

  void tNameOwner_pskel::
  Name_parser (::KVZU::Simple1::s500_pskel& p)
  {
    this->Name_parser_ = &p;
  }

  void tNameOwner_pskel::
  parsers (::KVZU::Simple1::s500_pskel& Name)
  {
    this->Name_parser_ = &Name;
  }

  tNameOwner_pskel::
  tNameOwner_pskel ()
  : Name_parser_ (0)
  {
  }

  // tEngineerOut_pskel
  //

  void tEngineerOut_pskel::
  FamilyName_parser (::KVZU::Simple1::s100_pskel& p)
  {
    this->FamilyName_parser_ = &p;
  }

  void tEngineerOut_pskel::
  FirstName_parser (::KVZU::Simple1::s100_pskel& p)
  {
    this->FirstName_parser_ = &p;
  }

  void tEngineerOut_pskel::
  Patronymic_parser (::KVZU::Simple1::s100_pskel& p)
  {
    this->Patronymic_parser_ = &p;
  }

  void tEngineerOut_pskel::
  NCertificate_parser (::KVZU::Simple1::s50_pskel& p)
  {
    this->NCertificate_parser_ = &p;
  }

  void tEngineerOut_pskel::
  Organization_parser (::KVZU::tOrganizationNameOut_pskel& p)
  {
    this->Organization_parser_ = &p;
  }

  void tEngineerOut_pskel::
  parsers (::KVZU::Simple1::s100_pskel& FamilyName,
           ::KVZU::Simple1::s100_pskel& FirstName,
           ::KVZU::Simple1::s100_pskel& Patronymic,
           ::KVZU::Simple1::s50_pskel& NCertificate,
           ::KVZU::tOrganizationNameOut_pskel& Organization)
  {
    this->FamilyName_parser_ = &FamilyName;
    this->FirstName_parser_ = &FirstName;
    this->Patronymic_parser_ = &Patronymic;
    this->NCertificate_parser_ = &NCertificate;
    this->Organization_parser_ = &Organization;
  }

  tEngineerOut_pskel::
  tEngineerOut_pskel ()
  : FamilyName_parser_ (0),
    FirstName_parser_ (0),
    Patronymic_parser_ (0),
    NCertificate_parser_ (0),
    Organization_parser_ (0)
  {
  }

  // tOrganizationNameOut_pskel
  //

  void tOrganizationNameOut_pskel::
  Name_parser (::KVZU::Simple1::s255_pskel& p)
  {
    this->Name_parser_ = &p;
  }

  void tOrganizationNameOut_pskel::
  parsers (::KVZU::Simple1::s255_pskel& Name)
  {
    this->Name_parser_ = &Name;
  }

  tOrganizationNameOut_pskel::
  tOrganizationNameOut_pskel ()
  : Name_parser_ (0)
  {
  }

  // KVZU_pskel
  //

  void KVZU_pskel::
  Parcels_parser (::KVZU::Parcels_pskel& p)
  {
    this->Parcels_parser_ = &p;
  }

  void KVZU_pskel::
  CertificationDoc_parser (::KVZUCer1::tCertificationDoc_pskel& p)
  {
    this->CertificationDoc_parser_ = &p;
  }

  void KVZU_pskel::
  Contractors_parser (::KVZU::Contractors_pskel& p)
  {
    this->Contractors_parser_ = &p;
  }

  void KVZU_pskel::
  CoordSystems_parser (::KVZU::Spa2::tCoordSystems_pskel& p)
  {
    this->CoordSystems_parser_ = &p;
  }

  void KVZU_pskel::
  parsers (::KVZU::Parcels_pskel& Parcels,
           ::KVZUCer1::tCertificationDoc_pskel& CertificationDoc,
           ::KVZU::Contractors_pskel& Contractors,
           ::KVZU::Spa2::tCoordSystems_pskel& CoordSystems)
  {
    this->Parcels_parser_ = &Parcels;
    this->CertificationDoc_parser_ = &CertificationDoc;
    this->Contractors_parser_ = &Contractors;
    this->CoordSystems_parser_ = &CoordSystems;
  }

  KVZU_pskel::
  KVZU_pskel ()
  : Parcels_parser_ (0),
    CertificationDoc_parser_ (0),
    Contractors_parser_ (0),
    CoordSystems_parser_ (0)
  {
  }

  // Rights_pskel
  //

  void Rights_pskel::
  Right_parser (::KVZU::tRight_pskel& p)
  {
    this->Right_parser_ = &p;
  }

  void Rights_pskel::
  parsers (::KVZU::tRight_pskel& Right)
  {
    this->Right_parser_ = &Right;
  }

  Rights_pskel::
  Rights_pskel ()
  : Right_parser_ (0)
  {
  }

  // SubParcels_pskel
  //

  void SubParcels_pskel::
  SubParcel_parser (::KVZU::tSubParcel_pskel& p)
  {
    this->SubParcel_parser_ = &p;
  }

  void SubParcels_pskel::
  parsers (::KVZU::tSubParcel_pskel& SubParcel)
  {
    this->SubParcel_parser_ = &SubParcel;
  }

  SubParcels_pskel::
  SubParcels_pskel ()
  : SubParcel_parser_ (0)
  {
  }

  // Contours_pskel
  //

  void Contours_pskel::
  Contour_parser (::KVZU::tContour_pskel& p)
  {
    this->Contour_parser_ = &p;
  }

  void Contours_pskel::
  parsers (::KVZU::tContour_pskel& Contour)
  {
    this->Contour_parser_ = &Contour;
  }

  Contours_pskel::
  Contours_pskel ()
  : Contour_parser_ (0)
  {
  }

  // CompositionEZ_pskel
  //

  void CompositionEZ_pskel::
  EntryParcel_parser (::KVZU::tEntryParcel_pskel& p)
  {
    this->EntryParcel_parser_ = &p;
  }

  void CompositionEZ_pskel::
  parsers (::KVZU::tEntryParcel_pskel& EntryParcel)
  {
    this->EntryParcel_parser_ = &EntryParcel;
  }

  CompositionEZ_pskel::
  CompositionEZ_pskel ()
  : EntryParcel_parser_ (0)
  {
  }

  // Encumbrances_pskel
  //

  void Encumbrances_pskel::
  Encumbrance_parser (::KVZU::tEncumbranceZU_pskel& p)
  {
    this->Encumbrance_parser_ = &p;
  }

  void Encumbrances_pskel::
  parsers (::KVZU::tEncumbranceZU_pskel& Encumbrance)
  {
    this->Encumbrance_parser_ = &Encumbrance;
  }

  Encumbrances_pskel::
  Encumbrances_pskel ()
  : Encumbrance_parser_ (0)
  {
  }

  // ParcelNeighbours_pskel
  //

  void ParcelNeighbours_pskel::
  ParcelNeighbour_parser (::KVZU::ParcelNeighbour_pskel& p)
  {
    this->ParcelNeighbour_parser_ = &p;
  }

  void ParcelNeighbours_pskel::
  parsers (::KVZU::ParcelNeighbour_pskel& ParcelNeighbour)
  {
    this->ParcelNeighbour_parser_ = &ParcelNeighbour;
  }

  ParcelNeighbours_pskel::
  ParcelNeighbours_pskel ()
  : ParcelNeighbour_parser_ (0)
  {
  }

  // Documents_pskel
  //

  void Documents_pskel::
  Document_parser (::KVZU::DocOut3::tDocumentWithoutAppliedFile_pskel& p)
  {
    this->Document_parser_ = &p;
  }

  void Documents_pskel::
  parsers (::KVZU::DocOut3::tDocumentWithoutAppliedFile_pskel& Document)
  {
    this->Document_parser_ = &Document;
  }

  Documents_pskel::
  Documents_pskel ()
  : Document_parser_ (0)
  {
  }

  // Owner_pskel
  //

  void Owner_pskel::
  ContactOwner_parser (::KVZU::tContactOwner_pskel& p)
  {
    this->ContactOwner_parser_ = &p;
  }

  void Owner_pskel::
  parsers (::KVZU::Person_pskel& Person,
           ::KVZU::tNameOwner_pskel& Organization,
           ::KVZU::tNameOwner_pskel& Governance,
           ::KVZU::tContactOwner_pskel& ContactOwner)
  {
    this->Person_parser_ = &Person;
    this->Organization_parser_ = &Organization;
    this->Governance_parser_ = &Governance;
    this->ContactOwner_parser_ = &ContactOwner;
  }

  Owner_pskel::
  Owner_pskel ()
  : ContactOwner_parser_ (0)
  {
  }

  // Person_pskel
  //

  void Person_pskel::
  FamilyName_parser (::KVZU::Simple1::s100_pskel& p)
  {
    this->FamilyName_parser_ = &p;
  }

  void Person_pskel::
  FirstName_parser (::KVZU::Simple1::s100_pskel& p)
  {
    this->FirstName_parser_ = &p;
  }

  void Person_pskel::
  Patronymic_parser (::KVZU::Simple1::s100_pskel& p)
  {
    this->Patronymic_parser_ = &p;
  }

  void Person_pskel::
  parsers (::KVZU::Simple1::s100_pskel& FamilyName,
           ::KVZU::Simple1::s100_pskel& FirstName,
           ::KVZU::Simple1::s100_pskel& Patronymic)
  {
    this->FamilyName_parser_ = &FamilyName;
    this->FirstName_parser_ = &FirstName;
    this->Patronymic_parser_ = &Patronymic;
  }

  Person_pskel::
  Person_pskel ()
  : FamilyName_parser_ (0),
    FirstName_parser_ (0),
    Patronymic_parser_ (0)
  {
  }

  // Parcels_pskel
  //

  void Parcels_pskel::
  Parcel_parser (::KVZU::tParcel_pskel& p)
  {
    this->Parcel_parser_ = &p;
  }

  void Parcels_pskel::
  OffspringParcel_parser (::KVZU::OffspringParcel_pskel& p)
  {
    this->OffspringParcel_parser_ = &p;
  }

  void Parcels_pskel::
  parsers (::KVZU::tParcel_pskel& Parcel,
           ::KVZU::OffspringParcel_pskel& OffspringParcel)
  {
    this->Parcel_parser_ = &Parcel;
    this->OffspringParcel_parser_ = &OffspringParcel;
  }

  Parcels_pskel::
  Parcels_pskel ()
  : Parcel_parser_ (0),
    OffspringParcel_parser_ (0)
  {
  }

  // Contractors_pskel
  //

  void Contractors_pskel::
  Contractor_parser (::KVZU::Contractor_pskel& p)
  {
    this->Contractor_parser_ = &p;
  }

  void Contractors_pskel::
  parsers (::KVZU::Contractor_pskel& Contractor)
  {
    this->Contractor_parser_ = &Contractor;
  }

  Contractors_pskel::
  Contractors_pskel ()
  : Contractor_parser_ (0)
  {
  }

  // ParcelNeighbour_pskel
  //

  void ParcelNeighbour_pskel::
  OwnerNeighbour_parser (::KVZU::OwnerNeighbour_pskel& p)
  {
    this->OwnerNeighbour_parser_ = &p;
  }

  void ParcelNeighbour_pskel::
  CadastralNumber_parser (::KVZU::Simple1::s40_pskel& p)
  {
    this->CadastralNumber_parser_ = &p;
  }

  void ParcelNeighbour_pskel::
  parsers (::KVZU::OwnerNeighbour_pskel& OwnerNeighbour,
           ::KVZU::Simple1::s40_pskel& CadastralNumber)
  {
    this->OwnerNeighbour_parser_ = &OwnerNeighbour;
    this->CadastralNumber_parser_ = &CadastralNumber;
  }

  ParcelNeighbour_pskel::
  ParcelNeighbour_pskel ()
  : OwnerNeighbour_parser_ (0),
    CadastralNumber_parser_ (0)
  {
  }

  // OffspringParcel_pskel
  //

  void OffspringParcel_pskel::
  EntitySpatial_parser (::KVZU::Spa2::tEntitySpatialBordersZUOut_pskel& p)
  {
    this->EntitySpatial_parser_ = &p;
  }

  void OffspringParcel_pskel::
  CadastralNumber_parser (::KVZU::Simple1::s40_pskel& p)
  {
    this->CadastralNumber_parser_ = &p;
  }

  void OffspringParcel_pskel::
  parsers (::KVZU::Spa2::tEntitySpatialBordersZUOut_pskel& EntitySpatial,
           ::KVZU::Simple1::s40_pskel& CadastralNumber)
  {
    this->EntitySpatial_parser_ = &EntitySpatial;
    this->CadastralNumber_parser_ = &CadastralNumber;
  }

  OffspringParcel_pskel::
  OffspringParcel_pskel ()
  : EntitySpatial_parser_ (0),
    CadastralNumber_parser_ (0)
  {
  }

  // Contractor_pskel
  //

  void Contractor_pskel::
  Date_parser (::xml_schema::date_pskel& p)
  {
    this->Date_parser_ = &p;
  }

  void Contractor_pskel::
  parsers (::KVZU::Simple1::s100_pskel& FamilyName,
           ::KVZU::Simple1::s100_pskel& FirstName,
           ::KVZU::Simple1::s100_pskel& Patronymic,
           ::KVZU::Simple1::s50_pskel& NCertificate,
           ::KVZU::tOrganizationNameOut_pskel& Organization,
           ::xml_schema::date_pskel& Date)
  {
    this->FamilyName_parser_ = &FamilyName;
    this->FirstName_parser_ = &FirstName;
    this->Patronymic_parser_ = &Patronymic;
    this->NCertificate_parser_ = &NCertificate;
    this->Organization_parser_ = &Organization;
    this->Date_parser_ = &Date;
  }

  Contractor_pskel::
  Contractor_pskel ()
  : Date_parser_ (0)
  {
  }

  // OwnerNeighbour_pskel
  //

  void OwnerNeighbour_pskel::
  ContactAddress_parser (::KVZU::Simple1::s4000_pskel& p)
  {
    this->ContactAddress_parser_ = &p;
  }

  void OwnerNeighbour_pskel::
  Email_parser (::KVZU::Simple1::s100_pskel& p)
  {
    this->Email_parser_ = &p;
  }

  void OwnerNeighbour_pskel::
  parsers (::KVZU::Simple1::s4000_pskel& ContactAddress,
           ::KVZU::Simple1::s100_pskel& Email)
  {
    this->ContactAddress_parser_ = &ContactAddress;
    this->Email_parser_ = &Email;
  }

  OwnerNeighbour_pskel::
  OwnerNeighbour_pskel ()
  : ContactAddress_parser_ (0),
    Email_parser_ (0)
  {
  }
}

namespace KVZU
{
  // tParcel_pskel
  //

  void tParcel_pskel::
  CadastralBlock ()
  {
  }

  void tParcel_pskel::
  Name ()
  {
  }

  void tParcel_pskel::
  OldNumbers ()
  {
  }

  void tParcel_pskel::
  PrevCadastralNumbers ()
  {
  }

  void tParcel_pskel::
  InnerCadastralNumbers ()
  {
  }

  void tParcel_pskel::
  Area ()
  {
  }

  void tParcel_pskel::
  Location ()
  {
  }

  void tParcel_pskel::
  Category ()
  {
  }

  void tParcel_pskel::
  Utilization ()
  {
  }

  void tParcel_pskel::
  NaturalObjects ()
  {
  }

  void tParcel_pskel::
  Rights ()
  {
  }

  void tParcel_pskel::
  SubParcels ()
  {
  }

  void tParcel_pskel::
  EntitySpatial ()
  {
  }

  void tParcel_pskel::
  Contours ()
  {
  }

  void tParcel_pskel::
  CompositionEZ ()
  {
  }

  void tParcel_pskel::
  Encumbrances ()
  {
  }

  void tParcel_pskel::
  CadastralCost ()
  {
  }

  void tParcel_pskel::
  SpecialNote (const ::std::string&)
  {
  }

  void tParcel_pskel::
  ParcelNeighbours ()
  {
  }

  void tParcel_pskel::
  AllOffspringParcel ()
  {
  }

  void tParcel_pskel::
  CadastralNumber ()
  {
  }

  void tParcel_pskel::
  State ()
  {
  }

  void tParcel_pskel::
  DateExpiry (const ::xml_schema::date&)
  {
  }

  void tParcel_pskel::
  DateCreated (const ::xml_schema::date&)
  {
  }

  void tParcel_pskel::
  DateRemoved (const ::xml_schema::date&)
  {
  }

  void tParcel_pskel::
  DateCreatedDoc (const ::xml_schema::date&)
  {
  }

  void tParcel_pskel::
  post_tParcel ()
  {
  }

  bool tParcel_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "CadastralBlock" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->CadastralBlock_parser_;

      if (this->CadastralBlock_parser_)
        this->CadastralBlock_parser_->pre ();

      return true;
    }

    if (n == "Name" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Name_parser_;

      if (this->Name_parser_)
        this->Name_parser_->pre ();

      return true;
    }

    if (n == "OldNumbers" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->OldNumbers_parser_;

      if (this->OldNumbers_parser_)
        this->OldNumbers_parser_->pre ();

      return true;
    }

    if (n == "PrevCadastralNumbers" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->PrevCadastralNumbers_parser_;

      if (this->PrevCadastralNumbers_parser_)
        this->PrevCadastralNumbers_parser_->pre ();

      return true;
    }

    if (n == "InnerCadastralNumbers" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->InnerCadastralNumbers_parser_;

      if (this->InnerCadastralNumbers_parser_)
        this->InnerCadastralNumbers_parser_->pre ();

      return true;
    }

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Area_parser_;

      if (this->Area_parser_)
        this->Area_parser_->pre ();

      return true;
    }

    if (n == "Location" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Location_parser_;

      if (this->Location_parser_)
        this->Location_parser_->pre ();

      return true;
    }

    if (n == "Category" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Category_parser_;

      if (this->Category_parser_)
        this->Category_parser_->pre ();

      return true;
    }

    if (n == "Utilization" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Utilization_parser_;

      if (this->Utilization_parser_)
        this->Utilization_parser_->pre ();

      return true;
    }

    if (n == "NaturalObjects" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->NaturalObjects_parser_;

      if (this->NaturalObjects_parser_)
        this->NaturalObjects_parser_->pre ();

      return true;
    }

    if (n == "Rights" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Rights_parser_;

      if (this->Rights_parser_)
        this->Rights_parser_->pre ();

      return true;
    }

    if (n == "SubParcels" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->SubParcels_parser_;

      if (this->SubParcels_parser_)
        this->SubParcels_parser_->pre ();

      return true;
    }

    if (n == "EntitySpatial" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->EntitySpatial_parser_;

      if (this->EntitySpatial_parser_)
        this->EntitySpatial_parser_->pre ();

      return true;
    }

    if (n == "Contours" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Contours_parser_;

      if (this->Contours_parser_)
        this->Contours_parser_->pre ();

      return true;
    }

    if (n == "CompositionEZ" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->CompositionEZ_parser_;

      if (this->CompositionEZ_parser_)
        this->CompositionEZ_parser_->pre ();

      return true;
    }

    if (n == "Encumbrances" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Encumbrances_parser_;

      if (this->Encumbrances_parser_)
        this->Encumbrances_parser_->pre ();

      return true;
    }

    if (n == "CadastralCost" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->CadastralCost_parser_;

      if (this->CadastralCost_parser_)
        this->CadastralCost_parser_->pre ();

      return true;
    }

    if (n == "SpecialNote" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->SpecialNote_parser_;

      if (this->SpecialNote_parser_)
        this->SpecialNote_parser_->pre ();

      return true;
    }

    if (n == "ParcelNeighbours" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->ParcelNeighbours_parser_;

      if (this->ParcelNeighbours_parser_)
        this->ParcelNeighbours_parser_->pre ();

      return true;
    }

    if (n == "AllOffspringParcel" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->AllOffspringParcel_parser_;

      if (this->AllOffspringParcel_parser_)
        this->AllOffspringParcel_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tParcel_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "CadastralBlock" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->CadastralBlock_parser_)
      {
        this->CadastralBlock_parser_->post_s40 ();
        this->CadastralBlock ();
      }

      return true;
    }

    if (n == "Name" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Name_parser_)
      {
        this->Name_parser_->post_dParcels ();
        this->Name ();
      }

      return true;
    }

    if (n == "OldNumbers" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->OldNumbers_parser_)
      {
        this->OldNumbers_parser_->post_tOldNumbers ();
        this->OldNumbers ();
      }

      return true;
    }

    if (n == "PrevCadastralNumbers" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->PrevCadastralNumbers_parser_)
      {
        this->PrevCadastralNumbers_parser_->post_tCadastralNumbersOut ();
        this->PrevCadastralNumbers ();
      }

      return true;
    }

    if (n == "InnerCadastralNumbers" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->InnerCadastralNumbers_parser_)
      {
        this->InnerCadastralNumbers_parser_->post_tCadastralNumbersOut ();
        this->InnerCadastralNumbers ();
      }

      return true;
    }

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Area_parser_)
      {
        this->Area_parser_->post_tAreaOut ();
        this->Area ();
      }

      return true;
    }

    if (n == "Location" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Location_parser_)
      {
        this->Location_parser_->post_tLocation ();
        this->Location ();
      }

      return true;
    }

    if (n == "Category" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Category_parser_)
      {
        this->Category_parser_->post_dCategories ();
        this->Category ();
      }

      return true;
    }

    if (n == "Utilization" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Utilization_parser_)
      {
        this->Utilization_parser_->post_tUtilization ();
        this->Utilization ();
      }

      return true;
    }

    if (n == "NaturalObjects" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->NaturalObjects_parser_)
      {
        this->NaturalObjects_parser_->post_tNaturalObjects ();
        this->NaturalObjects ();
      }

      return true;
    }

    if (n == "Rights" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Rights_parser_)
      {
        this->Rights_parser_->post_Rights ();
        this->Rights ();
      }

      return true;
    }

    if (n == "SubParcels" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->SubParcels_parser_)
      {
        this->SubParcels_parser_->post_SubParcels ();
        this->SubParcels ();
      }

      return true;
    }

    if (n == "EntitySpatial" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->EntitySpatial_parser_)
      {
        this->EntitySpatial_parser_->post_tEntitySpatialBordersZUOut ();
        this->EntitySpatial ();
      }

      return true;
    }

    if (n == "Contours" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Contours_parser_)
      {
        this->Contours_parser_->post_Contours ();
        this->Contours ();
      }

      return true;
    }

    if (n == "CompositionEZ" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->CompositionEZ_parser_)
      {
        this->CompositionEZ_parser_->post_CompositionEZ ();
        this->CompositionEZ ();
      }

      return true;
    }

    if (n == "Encumbrances" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Encumbrances_parser_)
      {
        this->Encumbrances_parser_->post_Encumbrances ();
        this->Encumbrances ();
      }

      return true;
    }

    if (n == "CadastralCost" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->CadastralCost_parser_)
      {
        this->CadastralCost_parser_->post_tCadastralCost ();
        this->CadastralCost ();
      }

      return true;
    }

    if (n == "SpecialNote" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->SpecialNote_parser_)
        this->SpecialNote (this->SpecialNote_parser_->post_string ());

      return true;
    }

    if (n == "ParcelNeighbours" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->ParcelNeighbours_parser_)
      {
        this->ParcelNeighbours_parser_->post_ParcelNeighbours ();
        this->ParcelNeighbours ();
      }

      return true;
    }

    if (n == "AllOffspringParcel" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->AllOffspringParcel_parser_)
      {
        this->AllOffspringParcel_parser_->post_tCadastralNumbersOut ();
        this->AllOffspringParcel ();
      }

      return true;
    }

    return false;
  }

  bool tParcel_pskel::
  _attribute_impl (const ::xml_schema::ro_string& ns,
                   const ::xml_schema::ro_string& n,
                   const ::xml_schema::ro_string& v)
  {
    if (this->::xml_schema::complex_content::_attribute_impl (ns, n, v))
      return true;

    if (n == "CadastralNumber" && ns.empty ())
    {
      if (this->CadastralNumber_parser_)
      {
        this->CadastralNumber_parser_->pre ();
        this->CadastralNumber_parser_->_pre_impl ();
        this->CadastralNumber_parser_->_characters (v);
        this->CadastralNumber_parser_->_post_impl ();
        this->CadastralNumber_parser_->post_s40 ();
        this->CadastralNumber ();
      }

      return true;
    }

    if (n == "State" && ns.empty ())
    {
      if (this->State_parser_)
      {
        this->State_parser_->pre ();
        this->State_parser_->_pre_impl ();
        this->State_parser_->_characters (v);
        this->State_parser_->_post_impl ();
        this->State_parser_->post_dStates ();
        this->State ();
      }

      return true;
    }

    if (n == "DateExpiry" && ns.empty ())
    {
      if (this->DateExpiry_parser_)
      {
        this->DateExpiry_parser_->pre ();
        this->DateExpiry_parser_->_pre_impl ();
        this->DateExpiry_parser_->_characters (v);
        this->DateExpiry_parser_->_post_impl ();
        this->DateExpiry (this->DateExpiry_parser_->post_date ());
      }

      return true;
    }

    if (n == "DateCreated" && ns.empty ())
    {
      if (this->DateCreated_parser_)
      {
        this->DateCreated_parser_->pre ();
        this->DateCreated_parser_->_pre_impl ();
        this->DateCreated_parser_->_characters (v);
        this->DateCreated_parser_->_post_impl ();
        this->DateCreated (this->DateCreated_parser_->post_date ());
      }

      return true;
    }

    if (n == "DateRemoved" && ns.empty ())
    {
      if (this->DateRemoved_parser_)
      {
        this->DateRemoved_parser_->pre ();
        this->DateRemoved_parser_->_pre_impl ();
        this->DateRemoved_parser_->_characters (v);
        this->DateRemoved_parser_->_post_impl ();
        this->DateRemoved (this->DateRemoved_parser_->post_date ());
      }

      return true;
    }

    if (n == "DateCreatedDoc" && ns.empty ())
    {
      if (this->DateCreatedDoc_parser_)
      {
        this->DateCreatedDoc_parser_->pre ();
        this->DateCreatedDoc_parser_->_pre_impl ();
        this->DateCreatedDoc_parser_->_characters (v);
        this->DateCreatedDoc_parser_->_post_impl ();
        this->DateCreatedDoc (this->DateCreatedDoc_parser_->post_date ());
      }

      return true;
    }

    return false;
  }

  // tSubParcel_pskel
  //

  void tSubParcel_pskel::
  Area ()
  {
  }

  void tSubParcel_pskel::
  Encumbrance ()
  {
  }

  void tSubParcel_pskel::
  EntitySpatial ()
  {
  }

  void tSubParcel_pskel::
  NumberRecord ()
  {
  }

  void tSubParcel_pskel::
  Full (bool)
  {
  }

  void tSubParcel_pskel::
  State ()
  {
  }

  void tSubParcel_pskel::
  DateExpiry (const ::xml_schema::date&)
  {
  }

  void tSubParcel_pskel::
  post_tSubParcel ()
  {
  }

  bool tSubParcel_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Area_parser_;

      if (this->Area_parser_)
        this->Area_parser_->pre ();

      return true;
    }

    if (n == "Encumbrance" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Encumbrance_parser_;

      if (this->Encumbrance_parser_)
        this->Encumbrance_parser_->pre ();

      return true;
    }

    if (n == "EntitySpatial" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->EntitySpatial_parser_;

      if (this->EntitySpatial_parser_)
        this->EntitySpatial_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tSubParcel_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Area_parser_)
      {
        this->Area_parser_->post_tAreaWithoutInaccuracyOut ();
        this->Area ();
      }

      return true;
    }

    if (n == "Encumbrance" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Encumbrance_parser_)
      {
        this->Encumbrance_parser_->post_tEncumbranceZU ();
        this->Encumbrance ();
      }

      return true;
    }

    if (n == "EntitySpatial" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->EntitySpatial_parser_)
      {
        this->EntitySpatial_parser_->post_tEntitySpatialBordersZUOut ();
        this->EntitySpatial ();
      }

      return true;
    }

    return false;
  }

  bool tSubParcel_pskel::
  _attribute_impl (const ::xml_schema::ro_string& ns,
                   const ::xml_schema::ro_string& n,
                   const ::xml_schema::ro_string& v)
  {
    if (this->::xml_schema::complex_content::_attribute_impl (ns, n, v))
      return true;

    if (n == "NumberRecord" && ns.empty ())
    {
      if (this->NumberRecord_parser_)
      {
        this->NumberRecord_parser_->pre ();
        this->NumberRecord_parser_->_pre_impl ();
        this->NumberRecord_parser_->_characters (v);
        this->NumberRecord_parser_->_post_impl ();
        this->NumberRecord_parser_->post_s40 ();
        this->NumberRecord ();
      }

      return true;
    }

    if (n == "Full" && ns.empty ())
    {
      if (this->Full_parser_)
      {
        this->Full_parser_->pre ();
        this->Full_parser_->_pre_impl ();
        this->Full_parser_->_characters (v);
        this->Full_parser_->_post_impl ();
        this->Full (this->Full_parser_->post_boolean ());
      }

      return true;
    }

    if (n == "State" && ns.empty ())
    {
      if (this->State_parser_)
      {
        this->State_parser_->pre ();
        this->State_parser_->_pre_impl ();
        this->State_parser_->_characters (v);
        this->State_parser_->_post_impl ();
        this->State_parser_->post_dStates ();
        this->State ();
      }

      return true;
    }

    if (n == "DateExpiry" && ns.empty ())
    {
      if (this->DateExpiry_parser_)
      {
        this->DateExpiry_parser_->pre ();
        this->DateExpiry_parser_->_pre_impl ();
        this->DateExpiry_parser_->_characters (v);
        this->DateExpiry_parser_->_post_impl ();
        this->DateExpiry (this->DateExpiry_parser_->post_date ());
      }

      return true;
    }

    return false;
  }

  // tContour_pskel
  //

  void tContour_pskel::
  Area ()
  {
  }

  void tContour_pskel::
  EntitySpatial ()
  {
  }

  void tContour_pskel::
  NumberRecord ()
  {
  }

  void tContour_pskel::
  post_tContour ()
  {
  }

  bool tContour_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Area_parser_;

      if (this->Area_parser_)
        this->Area_parser_->pre ();

      return true;
    }

    if (n == "EntitySpatial" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->EntitySpatial_parser_;

      if (this->EntitySpatial_parser_)
        this->EntitySpatial_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tContour_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Area_parser_)
      {
        this->Area_parser_->post_tAreaWithoutInaccuracyOut ();
        this->Area ();
      }

      return true;
    }

    if (n == "EntitySpatial" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->EntitySpatial_parser_)
      {
        this->EntitySpatial_parser_->post_tEntitySpatialBordersZUOut ();
        this->EntitySpatial ();
      }

      return true;
    }

    return false;
  }

  bool tContour_pskel::
  _attribute_impl (const ::xml_schema::ro_string& ns,
                   const ::xml_schema::ro_string& n,
                   const ::xml_schema::ro_string& v)
  {
    if (this->::xml_schema::complex_content::_attribute_impl (ns, n, v))
      return true;

    if (n == "NumberRecord" && ns.empty ())
    {
      if (this->NumberRecord_parser_)
      {
        this->NumberRecord_parser_->pre ();
        this->NumberRecord_parser_->_pre_impl ();
        this->NumberRecord_parser_->_characters (v);
        this->NumberRecord_parser_->_post_impl ();
        this->NumberRecord_parser_->post_p10 ();
        this->NumberRecord ();
      }

      return true;
    }

    return false;
  }

  // tEntryParcel_pskel
  //

  void tEntryParcel_pskel::
  Area ()
  {
  }

  void tEntryParcel_pskel::
  EntitySpatial ()
  {
  }

  void tEntryParcel_pskel::
  CadastralNumber ()
  {
  }

  void tEntryParcel_pskel::
  State ()
  {
  }

  void tEntryParcel_pskel::
  DateRemoved (const ::xml_schema::date&)
  {
  }

  void tEntryParcel_pskel::
  post_tEntryParcel ()
  {
  }

  bool tEntryParcel_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Area_parser_;

      if (this->Area_parser_)
        this->Area_parser_->pre ();

      return true;
    }

    if (n == "EntitySpatial" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->EntitySpatial_parser_;

      if (this->EntitySpatial_parser_)
        this->EntitySpatial_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tEntryParcel_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Area_parser_)
      {
        this->Area_parser_->post_tAreaWithoutInaccuracyOut ();
        this->Area ();
      }

      return true;
    }

    if (n == "EntitySpatial" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->EntitySpatial_parser_)
      {
        this->EntitySpatial_parser_->post_tEntitySpatialBordersZUOut ();
        this->EntitySpatial ();
      }

      return true;
    }

    return false;
  }

  bool tEntryParcel_pskel::
  _attribute_impl (const ::xml_schema::ro_string& ns,
                   const ::xml_schema::ro_string& n,
                   const ::xml_schema::ro_string& v)
  {
    if (this->::xml_schema::complex_content::_attribute_impl (ns, n, v))
      return true;

    if (n == "CadastralNumber" && ns.empty ())
    {
      if (this->CadastralNumber_parser_)
      {
        this->CadastralNumber_parser_->pre ();
        this->CadastralNumber_parser_->_pre_impl ();
        this->CadastralNumber_parser_->_characters (v);
        this->CadastralNumber_parser_->_post_impl ();
        this->CadastralNumber_parser_->post_s40 ();
        this->CadastralNumber ();
      }

      return true;
    }

    if (n == "State" && ns.empty ())
    {
      if (this->State_parser_)
      {
        this->State_parser_->pre ();
        this->State_parser_->_pre_impl ();
        this->State_parser_->_characters (v);
        this->State_parser_->_post_impl ();
        this->State_parser_->post_dStates ();
        this->State ();
      }

      return true;
    }

    if (n == "DateRemoved" && ns.empty ())
    {
      if (this->DateRemoved_parser_)
      {
        this->DateRemoved_parser_->pre ();
        this->DateRemoved_parser_->_pre_impl ();
        this->DateRemoved_parser_->_characters (v);
        this->DateRemoved_parser_->_post_impl ();
        this->DateRemoved (this->DateRemoved_parser_->post_date ());
      }

      return true;
    }

    return false;
  }

  // tAreaOut_pskel
  //

  void tAreaOut_pskel::
  Area ()
  {
  }

  void tAreaOut_pskel::
  Unit ()
  {
  }

  void tAreaOut_pskel::
  Inaccuracy ()
  {
  }

  void tAreaOut_pskel::
  post_tAreaOut ()
  {
  }

  bool tAreaOut_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Area_parser_;

      if (this->Area_parser_)
        this->Area_parser_->pre ();

      return true;
    }

    if (n == "Unit" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Unit_parser_;

      if (this->Unit_parser_)
        this->Unit_parser_->pre ();

      return true;
    }

    if (n == "Inaccuracy" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Inaccuracy_parser_;

      if (this->Inaccuracy_parser_)
        this->Inaccuracy_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tAreaOut_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Area_parser_)
      {
        this->Area_parser_->post_nn20 ();
        this->Area ();
      }

      return true;
    }

    if (n == "Unit" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Unit_parser_)
      {
        this->Unit_parser_->post_dUnit ();
        this->Unit ();
      }

      return true;
    }

    if (n == "Inaccuracy" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Inaccuracy_parser_)
      {
        this->Inaccuracy_parser_->post_d20_2 ();
        this->Inaccuracy ();
      }

      return true;
    }

    return false;
  }

  // tAreaWithoutInaccuracyOut_pskel
  //

  void tAreaWithoutInaccuracyOut_pskel::
  Area ()
  {
  }

  void tAreaWithoutInaccuracyOut_pskel::
  Unit ()
  {
  }

  void tAreaWithoutInaccuracyOut_pskel::
  post_tAreaWithoutInaccuracyOut ()
  {
  }

  bool tAreaWithoutInaccuracyOut_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Area_parser_;

      if (this->Area_parser_)
        this->Area_parser_->pre ();

      return true;
    }

    if (n == "Unit" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Unit_parser_;

      if (this->Unit_parser_)
        this->Unit_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tAreaWithoutInaccuracyOut_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Area" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Area_parser_)
      {
        this->Area_parser_->post_d20_2 ();
        this->Area ();
      }

      return true;
    }

    if (n == "Unit" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Unit_parser_)
      {
        this->Unit_parser_->post_dUnit ();
        this->Unit ();
      }

      return true;
    }

    return false;
  }

  // tUtilization_pskel
  //

  void tUtilization_pskel::
  Utilization ()
  {
  }

  void tUtilization_pskel::
  ByDoc ()
  {
  }

  void tUtilization_pskel::
  post_tUtilization ()
  {
  }

  bool tUtilization_pskel::
  _attribute_impl (const ::xml_schema::ro_string& ns,
                   const ::xml_schema::ro_string& n,
                   const ::xml_schema::ro_string& v)
  {
    if (this->::xml_schema::complex_content::_attribute_impl (ns, n, v))
      return true;

    if (n == "Utilization" && ns.empty ())
    {
      if (this->Utilization_parser_)
      {
        this->Utilization_parser_->pre ();
        this->Utilization_parser_->_pre_impl ();
        this->Utilization_parser_->_characters (v);
        this->Utilization_parser_->_post_impl ();
        this->Utilization_parser_->post_dUtilizations ();
        this->Utilization ();
      }

      return true;
    }

    if (n == "ByDoc" && ns.empty ())
    {
      if (this->ByDoc_parser_)
      {
        this->ByDoc_parser_->pre ();
        this->ByDoc_parser_->_pre_impl ();
        this->ByDoc_parser_->_characters (v);
        this->ByDoc_parser_->_post_impl ();
        this->ByDoc_parser_->post_s4000 ();
        this->ByDoc ();
      }

      return true;
    }

    return false;
  }

  // tCadastralNumbersOut_pskel
  //

  void tCadastralNumbersOut_pskel::
  CadastralNumber ()
  {
  }

  void tCadastralNumbersOut_pskel::
  post_tCadastralNumbersOut ()
  {
  }

  bool tCadastralNumbersOut_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "CadastralNumber" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->CadastralNumber_parser_;

      if (this->CadastralNumber_parser_)
        this->CadastralNumber_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tCadastralNumbersOut_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "CadastralNumber" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->CadastralNumber_parser_)
      {
        this->CadastralNumber_parser_->post_s40 ();
        this->CadastralNumber ();
      }

      return true;
    }

    return false;
  }

  // tLocation_pskel
  //

  void tLocation_pskel::
  inBounds ()
  {
  }

  void tLocation_pskel::
  Placed ()
  {
  }

  void tLocation_pskel::
  Elaboration ()
  {
  }

  void tLocation_pskel::
  Address ()
  {
  }

  void tLocation_pskel::
  post_tLocation ()
  {
  }

  bool tLocation_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "inBounds" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->inBounds_parser_;

      if (this->inBounds_parser_)
        this->inBounds_parser_->pre ();

      return true;
    }

    if (n == "Placed" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Placed_parser_;

      if (this->Placed_parser_)
        this->Placed_parser_->pre ();

      return true;
    }

    if (n == "Elaboration" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Elaboration_parser_;

      if (this->Elaboration_parser_)
        this->Elaboration_parser_->pre ();

      return true;
    }

    if (n == "Address" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Address_parser_;

      if (this->Address_parser_)
        this->Address_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tLocation_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "inBounds" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->inBounds_parser_)
      {
        this->inBounds_parser_->post_sInBounds ();
        this->inBounds ();
      }

      return true;
    }

    if (n == "Placed" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Placed_parser_)
      {
        this->Placed_parser_->post_s6 ();
        this->Placed ();
      }

      return true;
    }

    if (n == "Elaboration" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Elaboration_parser_)
      {
        this->Elaboration_parser_->post_tElaborationLocation ();
        this->Elaboration ();
      }

      return true;
    }

    if (n == "Address" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Address_parser_)
      {
        this->Address_parser_->post_tAddressOut ();
        this->Address ();
      }

      return true;
    }

    return false;
  }

  // tElaborationLocation_pskel
  //

  void tElaborationLocation_pskel::
  ReferenceMark ()
  {
  }

  void tElaborationLocation_pskel::
  Distance ()
  {
  }

  void tElaborationLocation_pskel::
  Direction ()
  {
  }

  void tElaborationLocation_pskel::
  post_tElaborationLocation ()
  {
  }

  bool tElaborationLocation_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "ReferenceMark" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->ReferenceMark_parser_;

      if (this->ReferenceMark_parser_)
        this->ReferenceMark_parser_->pre ();

      return true;
    }

    if (n == "Distance" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Distance_parser_;

      if (this->Distance_parser_)
        this->Distance_parser_->pre ();

      return true;
    }

    if (n == "Direction" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Direction_parser_;

      if (this->Direction_parser_)
        this->Direction_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tElaborationLocation_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "ReferenceMark" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->ReferenceMark_parser_)
      {
        this->ReferenceMark_parser_->post_s255 ();
        this->ReferenceMark ();
      }

      return true;
    }

    if (n == "Distance" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Distance_parser_)
      {
        this->Distance_parser_->post_s255 ();
        this->Distance ();
      }

      return true;
    }

    if (n == "Direction" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Direction_parser_)
      {
        this->Direction_parser_->post_s255 ();
        this->Direction ();
      }

      return true;
    }

    return false;
  }

  // tRight_pskel
  //

  void tRight_pskel::
  Name ()
  {
  }

  void tRight_pskel::
  Type ()
  {
  }

  void tRight_pskel::
  Owners ()
  {
  }

  void tRight_pskel::
  Share ()
  {
  }

  void tRight_pskel::
  ShareText ()
  {
  }

  void tRight_pskel::
  Desc ()
  {
  }

  void tRight_pskel::
  Registration ()
  {
  }

  void tRight_pskel::
  Documents ()
  {
  }

  void tRight_pskel::
  post_tRight ()
  {
  }

  bool tRight_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Name" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Name_parser_;

      if (this->Name_parser_)
        this->Name_parser_->pre ();

      return true;
    }

    if (n == "Type" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Type_parser_;

      if (this->Type_parser_)
        this->Type_parser_->pre ();

      return true;
    }

    if (n == "Owners" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Owners_parser_;

      if (this->Owners_parser_)
        this->Owners_parser_->pre ();

      return true;
    }

    if (n == "Share" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Share_parser_;

      if (this->Share_parser_)
        this->Share_parser_->pre ();

      return true;
    }

    if (n == "ShareText" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->ShareText_parser_;

      if (this->ShareText_parser_)
        this->ShareText_parser_->pre ();

      return true;
    }

    if (n == "Desc" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Desc_parser_;

      if (this->Desc_parser_)
        this->Desc_parser_->pre ();

      return true;
    }

    if (n == "Registration" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Registration_parser_;

      if (this->Registration_parser_)
        this->Registration_parser_->pre ();

      return true;
    }

    if (n == "Documents" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Documents_parser_;

      if (this->Documents_parser_)
        this->Documents_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tRight_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Name" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Name_parser_)
      {
        this->Name_parser_->post_s255 ();
        this->Name ();
      }

      return true;
    }

    if (n == "Type" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Type_parser_)
      {
        this->Type_parser_->post_dRights ();
        this->Type ();
      }

      return true;
    }

    if (n == "Owners" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Owners_parser_)
      {
        this->Owners_parser_->post_tOwners ();
        this->Owners ();
      }

      return true;
    }

    if (n == "Share" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Share_parser_)
      {
        this->Share_parser_->post_tShare ();
        this->Share ();
      }

      return true;
    }

    if (n == "ShareText" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->ShareText_parser_)
      {
        this->ShareText_parser_->post_s255 ();
        this->ShareText ();
      }

      return true;
    }

    if (n == "Desc" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Desc_parser_)
      {
        this->Desc_parser_->post_s255 ();
        this->Desc ();
      }

      return true;
    }

    if (n == "Registration" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Registration_parser_)
      {
        this->Registration_parser_->post_tRegistration ();
        this->Registration ();
      }

      return true;
    }

    if (n == "Documents" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Documents_parser_)
      {
        this->Documents_parser_->post_Documents ();
        this->Documents ();
      }

      return true;
    }

    return false;
  }

  // tEncumbranceZU_pskel
  //

  void tEncumbranceZU_pskel::
  Name ()
  {
  }

  void tEncumbranceZU_pskel::
  Type ()
  {
  }

  void tEncumbranceZU_pskel::
  AccountNumber ()
  {
  }

  void tEncumbranceZU_pskel::
  CadastralNumberRestriction ()
  {
  }

  void tEncumbranceZU_pskel::
  OwnersRestrictionInFavorem ()
  {
  }

  void tEncumbranceZU_pskel::
  Duration ()
  {
  }

  void tEncumbranceZU_pskel::
  Registration ()
  {
  }

  void tEncumbranceZU_pskel::
  Document ()
  {
  }

  void tEncumbranceZU_pskel::
  post_tEncumbranceZU ()
  {
  }

  bool tEncumbranceZU_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Name" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Name_parser_;

      if (this->Name_parser_)
        this->Name_parser_->pre ();

      return true;
    }

    if (n == "Type" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Type_parser_;

      if (this->Type_parser_)
        this->Type_parser_->pre ();

      return true;
    }

    if (n == "AccountNumber" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->AccountNumber_parser_;

      if (this->AccountNumber_parser_)
        this->AccountNumber_parser_->pre ();

      return true;
    }

    if (n == "CadastralNumberRestriction" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->CadastralNumberRestriction_parser_;

      if (this->CadastralNumberRestriction_parser_)
        this->CadastralNumberRestriction_parser_->pre ();

      return true;
    }

    if (n == "OwnersRestrictionInFavorem" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->OwnersRestrictionInFavorem_parser_;

      if (this->OwnersRestrictionInFavorem_parser_)
        this->OwnersRestrictionInFavorem_parser_->pre ();

      return true;
    }

    if (n == "Duration" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Duration_parser_;

      if (this->Duration_parser_)
        this->Duration_parser_->pre ();

      return true;
    }

    if (n == "Registration" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Registration_parser_;

      if (this->Registration_parser_)
        this->Registration_parser_->pre ();

      return true;
    }

    if (n == "Document" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Document_parser_;

      if (this->Document_parser_)
        this->Document_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tEncumbranceZU_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Name" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Name_parser_)
      {
        this->Name_parser_->post_s4000 ();
        this->Name ();
      }

      return true;
    }

    if (n == "Type" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Type_parser_)
      {
        this->Type_parser_->post_dEncumbrances ();
        this->Type ();
      }

      return true;
    }

    if (n == "AccountNumber" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->AccountNumber_parser_)
      {
        this->AccountNumber_parser_->post_s255 ();
        this->AccountNumber ();
      }

      return true;
    }

    if (n == "CadastralNumberRestriction" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->CadastralNumberRestriction_parser_)
      {
        this->CadastralNumberRestriction_parser_->post_s40 ();
        this->CadastralNumberRestriction ();
      }

      return true;
    }

    if (n == "OwnersRestrictionInFavorem" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->OwnersRestrictionInFavorem_parser_)
      {
        this->OwnersRestrictionInFavorem_parser_->post_tOwnerRestrictionInFavorem ();
        this->OwnersRestrictionInFavorem ();
      }

      return true;
    }

    if (n == "Duration" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Duration_parser_)
      {
        this->Duration_parser_->post_tDuration ();
        this->Duration ();
      }

      return true;
    }

    if (n == "Registration" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Registration_parser_)
      {
        this->Registration_parser_->post_tRegistration ();
        this->Registration ();
      }

      return true;
    }

    if (n == "Document" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Document_parser_)
      {
        this->Document_parser_->post_tDocumentWithoutAppliedFile ();
        this->Document ();
      }

      return true;
    }

    return false;
  }

  // tShare_pskel
  //

  void tShare_pskel::
  Numerator (long long)
  {
  }

  void tShare_pskel::
  Denominator (long long)
  {
  }

  void tShare_pskel::
  post_tShare ()
  {
  }

  bool tShare_pskel::
  _attribute_impl (const ::xml_schema::ro_string& ns,
                   const ::xml_schema::ro_string& n,
                   const ::xml_schema::ro_string& v)
  {
    if (this->::xml_schema::complex_content::_attribute_impl (ns, n, v))
      return true;

    if (n == "Numerator" && ns.empty ())
    {
      if (this->Numerator_parser_)
      {
        this->Numerator_parser_->pre ();
        this->Numerator_parser_->_pre_impl ();
        this->Numerator_parser_->_characters (v);
        this->Numerator_parser_->_post_impl ();
        this->Numerator (this->Numerator_parser_->post_integer ());
      }

      return true;
    }

    if (n == "Denominator" && ns.empty ())
    {
      if (this->Denominator_parser_)
      {
        this->Denominator_parser_->pre ();
        this->Denominator_parser_->_pre_impl ();
        this->Denominator_parser_->_characters (v);
        this->Denominator_parser_->_post_impl ();
        this->Denominator (this->Denominator_parser_->post_integer ());
      }

      return true;
    }

    return false;
  }

  // tRegistration_pskel
  //

  void tRegistration_pskel::
  RegNumber ()
  {
  }

  void tRegistration_pskel::
  RegDate (const ::xml_schema::date&)
  {
  }

  void tRegistration_pskel::
  post_tRegistration ()
  {
  }

  bool tRegistration_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "RegNumber" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->RegNumber_parser_;

      if (this->RegNumber_parser_)
        this->RegNumber_parser_->pre ();

      return true;
    }

    if (n == "RegDate" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->RegDate_parser_;

      if (this->RegDate_parser_)
        this->RegDate_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tRegistration_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "RegNumber" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->RegNumber_parser_)
      {
        this->RegNumber_parser_->post_s45 ();
        this->RegNumber ();
      }

      return true;
    }

    if (n == "RegDate" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->RegDate_parser_)
        this->RegDate (this->RegDate_parser_->post_date ());

      return true;
    }

    return false;
  }

  // tDuration_pskel
  //

  void tDuration_pskel::
  Started (const ::xml_schema::date&)
  {
  }

  void tDuration_pskel::
  Stopped (const ::xml_schema::date&)
  {
  }

  void tDuration_pskel::
  Term ()
  {
  }

  void tDuration_pskel::
  post_tDuration ()
  {
  }

  bool tDuration_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Started" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Started_parser_;

      if (this->Started_parser_)
        this->Started_parser_->pre ();

      return true;
    }

    if (n == "Stopped" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Stopped_parser_;

      if (this->Stopped_parser_)
        this->Stopped_parser_->pre ();

      return true;
    }

    if (n == "Term" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Term_parser_;

      if (this->Term_parser_)
        this->Term_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tDuration_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Started" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Started_parser_)
        this->Started (this->Started_parser_->post_date ());

      return true;
    }

    if (n == "Stopped" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Stopped_parser_)
        this->Stopped (this->Stopped_parser_->post_date ());

      return true;
    }

    if (n == "Term" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Term_parser_)
      {
        this->Term_parser_->post_s100 ();
        this->Term ();
      }

      return true;
    }

    return false;
  }

  // tOwners_pskel
  //

  void tOwners_pskel::
  Owner ()
  {
  }

  void tOwners_pskel::
  post_tOwners ()
  {
  }

  bool tOwners_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Owner" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Owner_parser_;

      if (this->Owner_parser_)
        this->Owner_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tOwners_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Owner" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Owner_parser_)
      {
        this->Owner_parser_->post_Owner ();
        this->Owner ();
      }

      return true;
    }

    return false;
  }

  // tOwner_pskel
  //

  void tOwner_pskel::
  Person ()
  {
  }

  void tOwner_pskel::
  Organization ()
  {
  }

  void tOwner_pskel::
  Governance ()
  {
  }

  void tOwner_pskel::
  post_tOwner ()
  {
  }

  bool tOwner_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Person" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Person_parser_;

      if (this->Person_parser_)
        this->Person_parser_->pre ();

      return true;
    }

    if (n == "Organization" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Organization_parser_;

      if (this->Organization_parser_)
        this->Organization_parser_->pre ();

      return true;
    }

    if (n == "Governance" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Governance_parser_;

      if (this->Governance_parser_)
        this->Governance_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tOwner_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Person" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Person_parser_)
      {
        this->Person_parser_->post_Person ();
        this->Person ();
      }

      return true;
    }

    if (n == "Organization" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Organization_parser_)
      {
        this->Organization_parser_->post_tNameOwner ();
        this->Organization ();
      }

      return true;
    }

    if (n == "Governance" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Governance_parser_)
      {
        this->Governance_parser_->post_tNameOwner ();
        this->Governance ();
      }

      return true;
    }

    return false;
  }

  // tContactOwner_pskel
  //

  void tContactOwner_pskel::
  Address ()
  {
  }

  void tContactOwner_pskel::
  Email ()
  {
  }

  void tContactOwner_pskel::
  post_tContactOwner ()
  {
  }

  bool tContactOwner_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Address" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Address_parser_;

      if (this->Address_parser_)
        this->Address_parser_->pre ();

      return true;
    }

    if (n == "Email" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Email_parser_;

      if (this->Email_parser_)
        this->Email_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tContactOwner_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Address" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Address_parser_)
      {
        this->Address_parser_->post_s4000 ();
        this->Address ();
      }

      return true;
    }

    if (n == "Email" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Email_parser_)
      {
        this->Email_parser_->post_s100 ();
        this->Email ();
      }

      return true;
    }

    return false;
  }

  // tOwnerRestrictionInFavorem_pskel
  //

  void tOwnerRestrictionInFavorem_pskel::
  OwnerRestrictionInFavorem ()
  {
  }

  void tOwnerRestrictionInFavorem_pskel::
  post_tOwnerRestrictionInFavorem ()
  {
  }

  bool tOwnerRestrictionInFavorem_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "OwnerRestrictionInFavorem" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->OwnerRestrictionInFavorem_parser_;

      if (this->OwnerRestrictionInFavorem_parser_)
        this->OwnerRestrictionInFavorem_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tOwnerRestrictionInFavorem_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "OwnerRestrictionInFavorem" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->OwnerRestrictionInFavorem_parser_)
      {
        this->OwnerRestrictionInFavorem_parser_->post_tOwner ();
        this->OwnerRestrictionInFavorem ();
      }

      return true;
    }

    return false;
  }

  // tNameOwner_pskel
  //

  void tNameOwner_pskel::
  Name ()
  {
  }

  void tNameOwner_pskel::
  post_tNameOwner ()
  {
  }

  bool tNameOwner_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Name" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Name_parser_;

      if (this->Name_parser_)
        this->Name_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tNameOwner_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Name" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Name_parser_)
      {
        this->Name_parser_->post_s500 ();
        this->Name ();
      }

      return true;
    }

    return false;
  }

  // tEngineerOut_pskel
  //

  void tEngineerOut_pskel::
  FamilyName ()
  {
  }

  void tEngineerOut_pskel::
  FirstName ()
  {
  }

  void tEngineerOut_pskel::
  Patronymic ()
  {
  }

  void tEngineerOut_pskel::
  NCertificate ()
  {
  }

  void tEngineerOut_pskel::
  Organization ()
  {
  }

  void tEngineerOut_pskel::
  post_tEngineerOut ()
  {
  }

  bool tEngineerOut_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "FamilyName" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->FamilyName_parser_;

      if (this->FamilyName_parser_)
        this->FamilyName_parser_->pre ();

      return true;
    }

    if (n == "FirstName" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->FirstName_parser_;

      if (this->FirstName_parser_)
        this->FirstName_parser_->pre ();

      return true;
    }

    if (n == "Patronymic" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Patronymic_parser_;

      if (this->Patronymic_parser_)
        this->Patronymic_parser_->pre ();

      return true;
    }

    if (n == "NCertificate" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->NCertificate_parser_;

      if (this->NCertificate_parser_)
        this->NCertificate_parser_->pre ();

      return true;
    }

    if (n == "Organization" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Organization_parser_;

      if (this->Organization_parser_)
        this->Organization_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tEngineerOut_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "FamilyName" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->FamilyName_parser_)
      {
        this->FamilyName_parser_->post_s100 ();
        this->FamilyName ();
      }

      return true;
    }

    if (n == "FirstName" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->FirstName_parser_)
      {
        this->FirstName_parser_->post_s100 ();
        this->FirstName ();
      }

      return true;
    }

    if (n == "Patronymic" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Patronymic_parser_)
      {
        this->Patronymic_parser_->post_s100 ();
        this->Patronymic ();
      }

      return true;
    }

    if (n == "NCertificate" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->NCertificate_parser_)
      {
        this->NCertificate_parser_->post_s50 ();
        this->NCertificate ();
      }

      return true;
    }

    if (n == "Organization" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Organization_parser_)
      {
        this->Organization_parser_->post_tOrganizationNameOut ();
        this->Organization ();
      }

      return true;
    }

    return false;
  }

  // tOrganizationNameOut_pskel
  //

  void tOrganizationNameOut_pskel::
  Name ()
  {
  }

  void tOrganizationNameOut_pskel::
  post_tOrganizationNameOut ()
  {
  }

  bool tOrganizationNameOut_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Name" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Name_parser_;

      if (this->Name_parser_)
        this->Name_parser_->pre ();

      return true;
    }

    return false;
  }

  bool tOrganizationNameOut_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Name" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Name_parser_)
      {
        this->Name_parser_->post_s255 ();
        this->Name ();
      }

      return true;
    }

    return false;
  }

  // KVZU_pskel
  //

  void KVZU_pskel::
  Parcels ()
  {
  }

  void KVZU_pskel::
  CertificationDoc ()
  {
  }

  void KVZU_pskel::
  Contractors ()
  {
  }

  void KVZU_pskel::
  CoordSystems ()
  {
  }

  void KVZU_pskel::
  post_KVZU ()
  {
  }

  bool KVZU_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Parcels" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Parcels_parser_;

      if (this->Parcels_parser_)
        this->Parcels_parser_->pre ();

      return true;
    }

    if (n == "CertificationDoc" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->CertificationDoc_parser_;

      if (this->CertificationDoc_parser_)
        this->CertificationDoc_parser_->pre ();

      return true;
    }

    if (n == "Contractors" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Contractors_parser_;

      if (this->Contractors_parser_)
        this->Contractors_parser_->pre ();

      return true;
    }

    if (n == "CoordSystems" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->CoordSystems_parser_;

      if (this->CoordSystems_parser_)
        this->CoordSystems_parser_->pre ();

      return true;
    }

    return false;
  }

  bool KVZU_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Parcels" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Parcels_parser_)
      {
        this->Parcels_parser_->post_Parcels ();
        this->Parcels ();
      }

      return true;
    }

    if (n == "CertificationDoc" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->CertificationDoc_parser_)
      {
        this->CertificationDoc_parser_->post_tCertificationDoc ();
        this->CertificationDoc ();
      }

      return true;
    }

    if (n == "Contractors" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Contractors_parser_)
      {
        this->Contractors_parser_->post_Contractors ();
        this->Contractors ();
      }

      return true;
    }

    if (n == "CoordSystems" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->CoordSystems_parser_)
      {
        this->CoordSystems_parser_->post_tCoordSystems ();
        this->CoordSystems ();
      }

      return true;
    }

    return false;
  }

  // Rights_pskel
  //

  void Rights_pskel::
  Right ()
  {
  }

  void Rights_pskel::
  post_Rights ()
  {
  }

  bool Rights_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Right" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Right_parser_;

      if (this->Right_parser_)
        this->Right_parser_->pre ();

      return true;
    }

    return false;
  }

  bool Rights_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Right" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Right_parser_)
      {
        this->Right_parser_->post_tRight ();
        this->Right ();
      }

      return true;
    }

    return false;
  }

  // SubParcels_pskel
  //

  void SubParcels_pskel::
  SubParcel ()
  {
  }

  void SubParcels_pskel::
  post_SubParcels ()
  {
  }

  bool SubParcels_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "SubParcel" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->SubParcel_parser_;

      if (this->SubParcel_parser_)
        this->SubParcel_parser_->pre ();

      return true;
    }

    return false;
  }

  bool SubParcels_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "SubParcel" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->SubParcel_parser_)
      {
        this->SubParcel_parser_->post_tSubParcel ();
        this->SubParcel ();
      }

      return true;
    }

    return false;
  }

  // Contours_pskel
  //

  void Contours_pskel::
  Contour ()
  {
  }

  void Contours_pskel::
  post_Contours ()
  {
  }

  bool Contours_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Contour" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Contour_parser_;

      if (this->Contour_parser_)
        this->Contour_parser_->pre ();

      return true;
    }

    return false;
  }

  bool Contours_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Contour" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Contour_parser_)
      {
        this->Contour_parser_->post_tContour ();
        this->Contour ();
      }

      return true;
    }

    return false;
  }

  // CompositionEZ_pskel
  //

  void CompositionEZ_pskel::
  EntryParcel ()
  {
  }

  void CompositionEZ_pskel::
  post_CompositionEZ ()
  {
  }

  bool CompositionEZ_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "EntryParcel" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->EntryParcel_parser_;

      if (this->EntryParcel_parser_)
        this->EntryParcel_parser_->pre ();

      return true;
    }

    return false;
  }

  bool CompositionEZ_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "EntryParcel" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->EntryParcel_parser_)
      {
        this->EntryParcel_parser_->post_tEntryParcel ();
        this->EntryParcel ();
      }

      return true;
    }

    return false;
  }

  // Encumbrances_pskel
  //

  void Encumbrances_pskel::
  Encumbrance ()
  {
  }

  void Encumbrances_pskel::
  post_Encumbrances ()
  {
  }

  bool Encumbrances_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Encumbrance" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Encumbrance_parser_;

      if (this->Encumbrance_parser_)
        this->Encumbrance_parser_->pre ();

      return true;
    }

    return false;
  }

  bool Encumbrances_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Encumbrance" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Encumbrance_parser_)
      {
        this->Encumbrance_parser_->post_tEncumbranceZU ();
        this->Encumbrance ();
      }

      return true;
    }

    return false;
  }

  // ParcelNeighbours_pskel
  //

  void ParcelNeighbours_pskel::
  ParcelNeighbour ()
  {
  }

  void ParcelNeighbours_pskel::
  post_ParcelNeighbours ()
  {
  }

  bool ParcelNeighbours_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "ParcelNeighbour" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->ParcelNeighbour_parser_;

      if (this->ParcelNeighbour_parser_)
        this->ParcelNeighbour_parser_->pre ();

      return true;
    }

    return false;
  }

  bool ParcelNeighbours_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "ParcelNeighbour" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->ParcelNeighbour_parser_)
      {
        this->ParcelNeighbour_parser_->post_ParcelNeighbour ();
        this->ParcelNeighbour ();
      }

      return true;
    }

    return false;
  }

  // Documents_pskel
  //

  void Documents_pskel::
  Document ()
  {
  }

  void Documents_pskel::
  post_Documents ()
  {
  }

  bool Documents_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Document" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Document_parser_;

      if (this->Document_parser_)
        this->Document_parser_->pre ();

      return true;
    }

    return false;
  }

  bool Documents_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Document" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Document_parser_)
      {
        this->Document_parser_->post_tDocumentWithoutAppliedFile ();
        this->Document ();
      }

      return true;
    }

    return false;
  }

  // Owner_pskel
  //

  void Owner_pskel::
  ContactOwner ()
  {
  }

  void Owner_pskel::
  post_Owner ()
  {
    post_tOwner ();
  }

  bool Owner_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::KVZU::tOwner_pskel::_start_element_impl (ns, n, t))
      return true;

    if (n == "ContactOwner" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->ContactOwner_parser_;

      if (this->ContactOwner_parser_)
        this->ContactOwner_parser_->pre ();

      return true;
    }

    return false;
  }

  bool Owner_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::KVZU::tOwner_pskel::_end_element_impl (ns, n))
      return true;

    if (n == "ContactOwner" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->ContactOwner_parser_)
      {
        this->ContactOwner_parser_->post_tContactOwner ();
        this->ContactOwner ();
      }

      return true;
    }

    return false;
  }

  // Person_pskel
  //

  void Person_pskel::
  FamilyName ()
  {
  }

  void Person_pskel::
  FirstName ()
  {
  }

  void Person_pskel::
  Patronymic ()
  {
  }

  void Person_pskel::
  post_Person ()
  {
  }

  bool Person_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "FamilyName" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->FamilyName_parser_;

      if (this->FamilyName_parser_)
        this->FamilyName_parser_->pre ();

      return true;
    }

    if (n == "FirstName" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->FirstName_parser_;

      if (this->FirstName_parser_)
        this->FirstName_parser_->pre ();

      return true;
    }

    if (n == "Patronymic" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Patronymic_parser_;

      if (this->Patronymic_parser_)
        this->Patronymic_parser_->pre ();

      return true;
    }

    return false;
  }

  bool Person_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "FamilyName" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->FamilyName_parser_)
      {
        this->FamilyName_parser_->post_s100 ();
        this->FamilyName ();
      }

      return true;
    }

    if (n == "FirstName" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->FirstName_parser_)
      {
        this->FirstName_parser_->post_s100 ();
        this->FirstName ();
      }

      return true;
    }

    if (n == "Patronymic" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Patronymic_parser_)
      {
        this->Patronymic_parser_->post_s100 ();
        this->Patronymic ();
      }

      return true;
    }

    return false;
  }

  // Parcels_pskel
  //

  void Parcels_pskel::
  Parcel ()
  {
  }

  void Parcels_pskel::
  OffspringParcel ()
  {
  }

  void Parcels_pskel::
  post_Parcels ()
  {
  }

  bool Parcels_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Parcel" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Parcel_parser_;

      if (this->Parcel_parser_)
        this->Parcel_parser_->pre ();

      return true;
    }

    if (n == "OffspringParcel" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->OffspringParcel_parser_;

      if (this->OffspringParcel_parser_)
        this->OffspringParcel_parser_->pre ();

      return true;
    }

    return false;
  }

  bool Parcels_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Parcel" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Parcel_parser_)
      {
        this->Parcel_parser_->post_tParcel ();
        this->Parcel ();
      }

      return true;
    }

    if (n == "OffspringParcel" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->OffspringParcel_parser_)
      {
        this->OffspringParcel_parser_->post_OffspringParcel ();
        this->OffspringParcel ();
      }

      return true;
    }

    return false;
  }

  // Contractors_pskel
  //

  void Contractors_pskel::
  Contractor ()
  {
  }

  void Contractors_pskel::
  post_Contractors ()
  {
  }

  bool Contractors_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "Contractor" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Contractor_parser_;

      if (this->Contractor_parser_)
        this->Contractor_parser_->pre ();

      return true;
    }

    return false;
  }

  bool Contractors_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "Contractor" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Contractor_parser_)
      {
        this->Contractor_parser_->post_Contractor ();
        this->Contractor ();
      }

      return true;
    }

    return false;
  }

  // ParcelNeighbour_pskel
  //

  void ParcelNeighbour_pskel::
  OwnerNeighbour ()
  {
  }

  void ParcelNeighbour_pskel::
  CadastralNumber ()
  {
  }

  void ParcelNeighbour_pskel::
  post_ParcelNeighbour ()
  {
  }

  bool ParcelNeighbour_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "OwnerNeighbour" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->OwnerNeighbour_parser_;

      if (this->OwnerNeighbour_parser_)
        this->OwnerNeighbour_parser_->pre ();

      return true;
    }

    return false;
  }

  bool ParcelNeighbour_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "OwnerNeighbour" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->OwnerNeighbour_parser_)
      {
        this->OwnerNeighbour_parser_->post_OwnerNeighbour ();
        this->OwnerNeighbour ();
      }

      return true;
    }

    return false;
  }

  bool ParcelNeighbour_pskel::
  _attribute_impl (const ::xml_schema::ro_string& ns,
                   const ::xml_schema::ro_string& n,
                   const ::xml_schema::ro_string& v)
  {
    if (this->::xml_schema::complex_content::_attribute_impl (ns, n, v))
      return true;

    if (n == "CadastralNumber" && ns.empty ())
    {
      if (this->CadastralNumber_parser_)
      {
        this->CadastralNumber_parser_->pre ();
        this->CadastralNumber_parser_->_pre_impl ();
        this->CadastralNumber_parser_->_characters (v);
        this->CadastralNumber_parser_->_post_impl ();
        this->CadastralNumber_parser_->post_s40 ();
        this->CadastralNumber ();
      }

      return true;
    }

    return false;
  }

  // OffspringParcel_pskel
  //

  void OffspringParcel_pskel::
  EntitySpatial ()
  {
  }

  void OffspringParcel_pskel::
  CadastralNumber ()
  {
  }

  void OffspringParcel_pskel::
  post_OffspringParcel ()
  {
  }

  bool OffspringParcel_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "EntitySpatial" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->EntitySpatial_parser_;

      if (this->EntitySpatial_parser_)
        this->EntitySpatial_parser_->pre ();

      return true;
    }

    return false;
  }

  bool OffspringParcel_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "EntitySpatial" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->EntitySpatial_parser_)
      {
        this->EntitySpatial_parser_->post_tEntitySpatialBordersZUOut ();
        this->EntitySpatial ();
      }

      return true;
    }

    return false;
  }

  bool OffspringParcel_pskel::
  _attribute_impl (const ::xml_schema::ro_string& ns,
                   const ::xml_schema::ro_string& n,
                   const ::xml_schema::ro_string& v)
  {
    if (this->::xml_schema::complex_content::_attribute_impl (ns, n, v))
      return true;

    if (n == "CadastralNumber" && ns.empty ())
    {
      if (this->CadastralNumber_parser_)
      {
        this->CadastralNumber_parser_->pre ();
        this->CadastralNumber_parser_->_pre_impl ();
        this->CadastralNumber_parser_->_characters (v);
        this->CadastralNumber_parser_->_post_impl ();
        this->CadastralNumber_parser_->post_s40 ();
        this->CadastralNumber ();
      }

      return true;
    }

    return false;
  }

  // Contractor_pskel
  //

  void Contractor_pskel::
  Date (const ::xml_schema::date&)
  {
  }

  void Contractor_pskel::
  post_Contractor ()
  {
    post_tEngineerOut ();
  }

  bool Contractor_pskel::
  _attribute_impl (const ::xml_schema::ro_string& ns,
                   const ::xml_schema::ro_string& n,
                   const ::xml_schema::ro_string& v)
  {
    if (this->::KVZU::tEngineerOut_pskel::_attribute_impl (ns, n, v))
      return true;

    if (n == "Date" && ns.empty ())
    {
      if (this->Date_parser_)
      {
        this->Date_parser_->pre ();
        this->Date_parser_->_pre_impl ();
        this->Date_parser_->_characters (v);
        this->Date_parser_->_post_impl ();
        this->Date (this->Date_parser_->post_date ());
      }

      return true;
    }

    return false;
  }

  // OwnerNeighbour_pskel
  //

  void OwnerNeighbour_pskel::
  ContactAddress ()
  {
  }

  void OwnerNeighbour_pskel::
  Email ()
  {
  }

  void OwnerNeighbour_pskel::
  post_OwnerNeighbour ()
  {
  }

  bool OwnerNeighbour_pskel::
  _start_element_impl (const ::xml_schema::ro_string& ns,
                       const ::xml_schema::ro_string& n,
                       const ::xml_schema::ro_string* t)
  {
    XSD_UNUSED (t);

    if (this->::xml_schema::complex_content::_start_element_impl (ns, n, t))
      return true;

    if (n == "ContactAddress" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->ContactAddress_parser_;

      if (this->ContactAddress_parser_)
        this->ContactAddress_parser_->pre ();

      return true;
    }

    if (n == "Email" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      this->::xml_schema::complex_content::context_.top ().parser_ = this->Email_parser_;

      if (this->Email_parser_)
        this->Email_parser_->pre ();

      return true;
    }

    return false;
  }

  bool OwnerNeighbour_pskel::
  _end_element_impl (const ::xml_schema::ro_string& ns,
                     const ::xml_schema::ro_string& n)
  {
    if (this->::xml_schema::complex_content::_end_element_impl (ns, n))
      return true;

    if (n == "ContactAddress" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->ContactAddress_parser_)
      {
        this->ContactAddress_parser_->post_s4000 ();
        this->ContactAddress ();
      }

      return true;
    }

    if (n == "Email" && ns == "urn://x-artefacts-rosreestr-ru/outgoing/kvzu/6.0.9")
    {
      if (this->Email_parser_)
      {
        this->Email_parser_->post_s100 ();
        this->Email ();
      }

      return true;
    }

    return false;
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

